,correction_history,student_history,bugs,changes,edit_dist,change_dist
0,<pre><span class="ast-node correction-node " id="stu_b45d0ba4-c73b-4f3d-8d6c-34326fa6b535" data-node-id="b45d0ba4-c73b-4f3d-8d6c-34326fa6b535" data-node-name="Module"><span class="ast-node correction-node " id="stu_da9aeb5d-09fb-41e3-960c-1fe7ce818e12" data-node-id="da9aeb5d-09fb-41e3-960c-1fe7ce818e12" data-node-name="FunctionDef name: howManyEggCartons" data-key=0 data-parent-list-id="6b176207-b755-4395-ad67-c1c1a0a4899a">def howManyEggCartons(<span class="ast-node correction-node " id="stu_866313ba-d823-48f8-8501-dfdc64b4bce3" data-node-id="866313ba-d823-48f8-8501-dfdc64b4bce3" data-node-name="arguments" data-key=args><span class="ast-node correction-node " id="stu_998a63c5-3d21-4df2-aa6f-640359579dac" data-node-id="998a63c5-3d21-4df2-aa6f-640359579dac" data-node-name="arg(arg = eggs)" data-key=0 data-parent-list-id="1cdfdccb-e976-435f-90a6-e27c48b75bdb">eggs</span></span>):<br>    <span class="ast-node correction-node " id="stu_4b4b9bc7-3e83-4358-9a37-3889eba5e51a" data-node-id="4b4b9bc7-3e83-4358-9a37-3889eba5e51a" data-node-name="Return" data-key=0 data-parent-list-id="c7e1ec1f-ac82-4f0b-b2ae-b9282c5d44e4">return <span class="ast-node correction-node " id="stu_05860a85-a6c3-4f24-849d-af2d076c6561" data-node-id="05860a85-a6c3-4f24-849d-af2d076c6561" data-node-name="BinOp //" data-key=value><span class="ast-node correction-node  move-node" id="stu_61fe7ad8-529e-4c2c-bbb9-b2d4228e456a" data-node-id="61fe7ad8-529e-4c2c-bbb9-b2d4228e456a" data-node-name="Load identifier eggs" data-key=left>eggs</span> // <span class="ast-node correction-node " id="stu_4df84570-ce66-4c5a-9558-10b146d7dfb3" data-node-id="4df84570-ce66-4c5a-9558-10b146d7dfb3" data-node-name="Constant(value = 12)" data-key=right>12</span></span></span></span></span></pre>,<pre><span class="ast-node student-node " id="stu_46d4d316-db5b-4955-b5f1-a260b9c0f551" data-node-id="46d4d316-db5b-4955-b5f1-a260b9c0f551" data-node-name="Module"><span class="ast-node student-node " id="stu_e12519e9-5af9-4baa-b59d-f5a8fba6afc5" data-node-id="e12519e9-5af9-4baa-b59d-f5a8fba6afc5" data-node-name="FunctionDef name: howManyEggCartons" data-key=0 data-parent-list-id="3ef25f04-3265-404d-bf13-9ef25889bf51">def howManyEggCartons(<span class="ast-node student-node " id="stu_2083d385-0979-48b0-901b-10a2b8e3d185" data-node-id="2083d385-0979-48b0-901b-10a2b8e3d185" data-node-name="arguments" data-key=args><span class="ast-node student-node " id="stu_bae5b731-318a-4e6f-a7df-6335c44595ea" data-node-id="bae5b731-318a-4e6f-a7df-6335c44595ea" data-node-name="arg(arg = eggs)" data-key=0 data-parent-list-id="d982d449-2015-4fa0-bf39-f2f26e76ee22">eggs</span></span>):<br>    <span class="ast-node student-node " id="stu_4d6986de-c574-4fc3-84b4-1b63fcbc801e" data-node-id="4d6986de-c574-4fc3-84b4-1b63fcbc801e" data-node-name="Return" data-key=0 data-parent-list-id="6d9ca3fd-e383-4490-9dd5-5477a383693c">return <span class="ast-node student-node  rename-node" id="stu_7789f6d5-1345-4598-adec-70e3dce23c3a" data-node-id="7789f6d5-1345-4598-adec-70e3dce23c3a" data-node-name="BinOp //" data-key=value><span class="ast-node student-node " id="stu_07303740-34eb-46ee-8d80-fd2c74d3b163" data-node-id="07303740-34eb-46ee-8d80-fd2c74d3b163" data-node-name="Load identifier eggs" data-key=left>eggs</span> // <span class="ast-node student-node " id="stu_6ffc4e1c-21ae-4b7d-a14f-3c1951230a52" data-node-id="6ffc4e1c-21ae-4b7d-a14f-3c1951230a52" data-node-name="Constant(value = 12)" data-key=right>12</span></span></span></span></span></pre>,"{'Action.MOVE_Stage.MOVE_61fe7ad8-529e-4c2c-bbb9-b2d4228e456a', 'Action.INSERT_Stage.INSERT_e65c6d03-5b85-43a3-a7b9-e8d3eb2cd978', 'Action.INSERT_Stage.INSERT_a7162d21-d083-45f8-99c9-a80a084f461d'}",{'Action.UPDATE_Stage.UPDATE_7789f6d5-1345-4598-adec-70e3dce23c3a'},3,1
1,<pre><span class="ast-node correction-node " id="stu_530c9308-6610-4298-bb64-99d63cbc1c7a" data-node-id="530c9308-6610-4298-bb64-99d63cbc1c7a" data-node-name="Module"><span class="ast-node correction-node " id="stu_e29b9a4b-566f-470f-85da-ce019c768f23" data-node-id="e29b9a4b-566f-470f-85da-ce019c768f23" data-node-name="FunctionDef name: howManyEggCartons" data-key=0 data-parent-list-id="da436dcd-f8ef-485d-a198-1b952655f70e">def howManyEggCartons(<span class="ast-node correction-node " id="stu_b6d3884b-8b33-4aa6-9ea0-4cdc7b09f78e" data-node-id="b6d3884b-8b33-4aa6-9ea0-4cdc7b09f78e" data-node-name="arguments" data-key=args><span class="ast-node correction-node " id="stu_c58539cb-b919-4cdf-a682-36684d73542c" data-node-id="c58539cb-b919-4cdf-a682-36684d73542c" data-node-name="arg(arg = eggs)" data-key=0 data-parent-list-id="58a2f2c6-4b16-49b7-bdaa-3deb0594914b">eggs</span></span>):<br>    <span class="ast-node correction-node " id="stu_7880fd7f-c08e-4b66-bec9-6b5e7d642273" data-node-id="7880fd7f-c08e-4b66-bec9-6b5e7d642273" data-node-name="Return" data-key=0 data-parent-list-id="5c116cfc-74c2-4abc-8bc7-2cbb9d54a77a">return <span class="ast-node correction-node  rename-node" id="stu_c6b0943b-5989-4a20-9a13-b1ef84e2193d" data-node-id="c6b0943b-5989-4a20-9a13-b1ef84e2193d" data-node-name="BinOp /" data-key=value><span class="ast-node correction-node  move-node" id="stu_fb452e69-c876-4410-bd0f-8717ddf4e47f" data-node-id="fb452e69-c876-4410-bd0f-8717ddf4e47f" data-node-name="Load identifier eggs" data-key=left>eggs</span> / <span class="ast-node correction-node " id="stu_eefd4e9a-3360-4ce9-ba06-c79c9df0f2d7" data-node-id="eefd4e9a-3360-4ce9-ba06-c79c9df0f2d7" data-node-name="Constant(value = 12)" data-key=right>12</span></span></span></span></span></pre>,<pre><span class="ast-node student-node " id="stu_f6ab2ea7-7465-4d4a-9341-3b5fa9411ac9" data-node-id="f6ab2ea7-7465-4d4a-9341-3b5fa9411ac9" data-node-name="Module"><span class="ast-node student-node " id="stu_7c2a1f21-a8a8-4bb3-96d3-8f57fd554932" data-node-id="7c2a1f21-a8a8-4bb3-96d3-8f57fd554932" data-node-name="FunctionDef name: howManyEggCartons" data-key=0 data-parent-list-id="efaf700f-6a4f-4543-b8df-49fe8af332f9">def howManyEggCartons(<span class="ast-node student-node " id="stu_8c3391cb-8639-4d28-bc84-18c254a86720" data-node-id="8c3391cb-8639-4d28-bc84-18c254a86720" data-node-name="arguments" data-key=args><span class="ast-node student-node " id="stu_4914aeeb-f927-4c6a-8c8c-a196f779a36b" data-node-id="4914aeeb-f927-4c6a-8c8c-a196f779a36b" data-node-name="arg(arg = eggs)" data-key=0 data-parent-list-id="d886dd85-05f8-4766-9360-785d2abfa7fc">eggs</span></span>):<br>    <span class="ast-node student-node " id="stu_0e2d013d-25f8-44d4-a027-16864d895c9f" data-node-id="0e2d013d-25f8-44d4-a027-16864d895c9f" data-node-name="Return" data-key=0 data-parent-list-id="8eaa05ea-6f09-4006-8982-18a0866ba47c">return <span class="ast-node student-node  rename-node" id="stu_b0533a50-ada7-466c-82a3-570779ce8abd" data-node-id="b0533a50-ada7-466c-82a3-570779ce8abd" data-node-name="BinOp /" data-key=value><span class="ast-node student-node " id="stu_8c8eff28-7484-4008-b797-6d1a9f03c129" data-node-id="8c8eff28-7484-4008-b797-6d1a9f03c129" data-node-name="Load identifier eggs" data-key=left>eggs</span> / <span class="ast-node student-node  rename-node" id="stu_d92293f3-cc5d-44b8-a68e-cd45eedd255a" data-node-id="d92293f3-cc5d-44b8-a68e-cd45eedd255a" data-node-name="Constant(value = 12)" data-key=right>12</span></span></span></span></span></pre>,"{'Action.UPDATE_Stage.UPDATE_c6b0943b-5989-4a20-9a13-b1ef84e2193d', 'Action.MOVE_Stage.MOVE_fb452e69-c876-4410-bd0f-8717ddf4e47f', 'Action.INSERT_Stage.INSERT_e69b4697-ba34-4cb9-9332-3e34e776c689', 'Action.INSERT_Stage.INSERT_cc48ea20-47a0-4d4d-aa51-1619ec53b071'}",{'Action.UPDATE_Stage.UPDATE_b0533a50-ada7-466c-82a3-570779ce8abd'}{'Action.UPDATE_Stage.UPDATE_d92293f3-cc5d-44b8-a68e-cd45eedd255a'},4,2
2,<pre><span class="ast-node correction-node " id="stu_15ad4862-04e6-4569-a487-7e14f502e940" data-node-id="15ad4862-04e6-4569-a487-7e14f502e940" data-node-name="Module"><span class="ast-node correction-node " id="stu_9869a3b7-0c60-4fea-905c-c913f7ee75f0" data-node-id="9869a3b7-0c60-4fea-905c-c913f7ee75f0" data-node-name="FunctionDef name: howManyEggCartons" data-key=0 data-parent-list-id="5cb26416-1bba-45ed-a191-99df62188119">def howManyEggCartons(<span class="ast-node correction-node " id="stu_5d12210f-194c-4261-ae75-3ee4f363d761" data-node-id="5d12210f-194c-4261-ae75-3ee4f363d761" data-node-name="arguments" data-key=args><span class="ast-node correction-node " id="stu_5df20e50-fa6a-407f-b353-7a3c229d4cda" data-node-id="5df20e50-fa6a-407f-b353-7a3c229d4cda" data-node-name="arg(arg = eggs)" data-key=0 data-parent-list-id="185fb9a7-4662-48d0-b0e4-65d207d75af4">eggs</span></span>):<br>    <span class="ast-node correction-node " id="stu_4a1953a8-50e4-4c6f-94e3-fae702bf8377" data-node-id="4a1953a8-50e4-4c6f-94e3-fae702bf8377" data-node-name="Return" data-key=0 data-parent-list-id="6af2a6b9-dd03-4ba0-bad5-a6f3183948d9">return <span class="ast-node correction-node " id="stu_7afb7504-c42f-4ca5-b605-d4e6adf04e97" data-node-id="7afb7504-c42f-4ca5-b605-d4e6adf04e97" data-node-name="BinOp //" data-key=value><span class="ast-node correction-node  move-node" id="stu_4401c9ac-f205-48e2-8068-4da5e4c19bd3" data-node-id="4401c9ac-f205-48e2-8068-4da5e4c19bd3" data-node-name="Load identifier eggs" data-key=left>eggs</span> // <span class="ast-node correction-node  delete-node" id="stu_6e897446-e106-445a-8e44-763bd2bbf47d" data-node-id="6e897446-e106-445a-8e44-763bd2bbf47d" data-node-name="Constant(value = 12.0)" data-key=right>12.0</span></span></span></span></span></pre>,<pre><span class="ast-node student-node " id="stu_2490fd89-5646-47b6-a839-b6677caf6aae" data-node-id="2490fd89-5646-47b6-a839-b6677caf6aae" data-node-name="Module"><span class="ast-node student-node " id="stu_c67c579b-e853-4b96-8c6c-8901210e750e" data-node-id="c67c579b-e853-4b96-8c6c-8901210e750e" data-node-name="FunctionDef name: howManyEggCartons" data-key=0 data-parent-list-id="9869b285-ab87-47f0-a273-e54908850ce1">def howManyEggCartons(<span class="ast-node student-node " id="stu_cfc5a391-34a2-4f4f-905d-4b3e9d860334" data-node-id="cfc5a391-34a2-4f4f-905d-4b3e9d860334" data-node-name="arguments" data-key=args><span class="ast-node student-node " id="stu_367bad67-f1a2-4de0-af2e-ea69a2a8b231" data-node-id="367bad67-f1a2-4de0-af2e-ea69a2a8b231" data-node-name="arg(arg = eggs)" data-key=0 data-parent-list-id="46a2fd8c-c51c-4daa-be9c-295887c1b422">eggs</span></span>):<br>    <span class="ast-node student-node " id="stu_dd9f1d7b-325f-4fb3-88ea-7b45529bec9c" data-node-id="dd9f1d7b-325f-4fb3-88ea-7b45529bec9c" data-node-name="Return" data-key=0 data-parent-list-id="b0a83913-1dd5-471f-a1bc-8405d651a75d">return <span class="ast-node student-node " id="stu_1c3ba5ab-0380-4578-ba6e-1bc4d8c594ad" data-node-id="1c3ba5ab-0380-4578-ba6e-1bc4d8c594ad" data-node-name="BinOp //" data-key=value><span class="ast-node student-node " id="stu_5732a228-df55-4c76-acef-77e0ac128d10" data-node-id="5732a228-df55-4c76-acef-77e0ac128d10" data-node-name="Load identifier eggs" data-key=left>eggs</span> // <span class="ast-node student-node  rename-node" id="stu_254b8df0-631c-4f09-acae-d52a083abd55" data-node-id="254b8df0-631c-4f09-acae-d52a083abd55" data-node-name="Constant(value = 12.0)" data-key=right>12.0</span></span></span></span></span></pre>,"{'Action.INSERT_Stage.INSERT_46272509-cadb-4c2f-bbfe-af213fed2a1c', 'Action.MOVE_Stage.MOVE_4401c9ac-f205-48e2-8068-4da5e4c19bd3', 'Action.INSERT_Stage.INSERT_d9c5535f-78f6-4721-8f6e-eeb2a3a31f05'}{'Action.DELETE_Stage.DELETE_6e897446-e106-445a-8e44-763bd2bbf47d', 'Action.INSERT_Stage.INSERT_741de88d-cd83-4e23-ac8e-0791dbe63085'}",{'Action.UPDATE_Stage.UPDATE_254b8df0-631c-4f09-acae-d52a083abd55'},5,1
3,<pre><span class="ast-node correction-node " id="stu_e310d5f2-6728-4646-907f-452a11f653a5" data-node-id="e310d5f2-6728-4646-907f-452a11f653a5" data-node-name="Module"><span class="ast-node correction-node " id="stu_4194eb1e-c9d6-47e4-92ba-e2b0ff221c9f" data-node-id="4194eb1e-c9d6-47e4-92ba-e2b0ff221c9f" data-node-name="FunctionDef name: howManyEggCartons" data-key=0 data-parent-list-id="265b4993-2859-4f0e-8420-02be3b5c7eb0">def howManyEggCartons(<span class="ast-node correction-node " id="stu_19b17eed-c6b9-4dc4-a5ba-d96ea2113974" data-node-id="19b17eed-c6b9-4dc4-a5ba-d96ea2113974" data-node-name="arguments" data-key=args><span class="ast-node correction-node " id="stu_401a7582-0f72-408d-8011-a44035419eeb" data-node-id="401a7582-0f72-408d-8011-a44035419eeb" data-node-name="arg(arg = eggs)" data-key=0 data-parent-list-id="c73b64df-089b-4001-b3c2-2ff6f034e278">eggs</span></span>):<br>    <span class="ast-node correction-node " id="stu_dcf5dcb8-e1d6-4975-9c8e-10b23c0a8018" data-node-id="dcf5dcb8-e1d6-4975-9c8e-10b23c0a8018" data-node-name="Return" data-key=0 data-parent-list-id="428deaa0-ce6b-41b0-9dee-c80804d1b443">return <span class="ast-node correction-node " id="stu_b0407221-84bc-4f91-81cb-cce70a69616d" data-node-id="b0407221-84bc-4f91-81cb-cce70a69616d" data-node-name="BinOp //" data-key=value><span class="ast-node correction-node  move-node" id="stu_42cf8519-910c-479f-a53d-1f70c7591590" data-node-id="42cf8519-910c-479f-a53d-1f70c7591590" data-node-name="Load identifier eggs" data-key=left>eggs</span> // <span class="ast-node correction-node  delete-node" id="stu_ba7e10ed-4d9c-43cb-b4a5-7c48af7fe4b4" data-node-id="ba7e10ed-4d9c-43cb-b4a5-7c48af7fe4b4" data-node-name="Constant(value = 13)" data-key=right>13</span></span></span></span></span></pre>,<pre><span class="ast-node student-node " id="stu_8e596420-3da2-4055-a66e-9c040fa38226" data-node-id="8e596420-3da2-4055-a66e-9c040fa38226" data-node-name="Module"><span class="ast-node student-node " id="stu_5e37a85e-9c51-41f8-bd73-998c68f33420" data-node-id="5e37a85e-9c51-41f8-bd73-998c68f33420" data-node-name="FunctionDef name: howManyEggCartons" data-key=0 data-parent-list-id="0be0aa77-1ac6-4216-94e8-421e06668a4e">def howManyEggCartons(<span class="ast-node student-node " id="stu_3753f8c4-6806-471e-bb03-78bfc0be6881" data-node-id="3753f8c4-6806-471e-bb03-78bfc0be6881" data-node-name="arguments" data-key=args><span class="ast-node student-node " id="stu_5407144c-307d-4194-9b92-4ff4b00808c1" data-node-id="5407144c-307d-4194-9b92-4ff4b00808c1" data-node-name="arg(arg = eggs)" data-key=0 data-parent-list-id="ebde06ca-40cf-47d3-b390-10081b5f874f">eggs</span></span>):<br>    <span class="ast-node student-node " id="stu_70d25a08-35c7-4136-95a8-653e04222185" data-node-id="70d25a08-35c7-4136-95a8-653e04222185" data-node-name="Return" data-key=0 data-parent-list-id="aef45c09-24d2-45cf-9fcd-c5c9bfe7c441">return <span class="ast-node student-node " id="stu_1a56f416-cf85-45f2-a363-c75b0a83008f" data-node-id="1a56f416-cf85-45f2-a363-c75b0a83008f" data-node-name="BinOp //" data-key=value><span class="ast-node student-node " id="stu_2fd663a5-2603-4ced-a024-6d6d4a0cc7aa" data-node-id="2fd663a5-2603-4ced-a024-6d6d4a0cc7aa" data-node-name="Load identifier eggs" data-key=left>eggs</span> // <span class="ast-node student-node  rename-node" id="stu_8807ef12-212f-447f-8532-08e9828825d4" data-node-id="8807ef12-212f-447f-8532-08e9828825d4" data-node-name="Constant(value = 13)" data-key=right>13</span></span></span></span></span></pre>,"{'Action.INSERT_Stage.INSERT_cbb8783e-d6f4-44e2-92d3-e96aa65cbe89', 'Action.MOVE_Stage.MOVE_42cf8519-910c-479f-a53d-1f70c7591590', 'Action.INSERT_Stage.INSERT_623231d6-9b14-4597-8abe-870751e4bfc8'}{'Action.DELETE_Stage.DELETE_ba7e10ed-4d9c-43cb-b4a5-7c48af7fe4b4', 'Action.INSERT_Stage.INSERT_5dd98555-26d9-42ac-b306-d034a097e0c3'}",{'Action.UPDATE_Stage.UPDATE_8807ef12-212f-447f-8532-08e9828825d4'},5,1
4,<pre><span class="ast-node correction-node " id="stu_6309d6df-ea9e-47a4-92bb-68369643fb47" data-node-id="6309d6df-ea9e-47a4-92bb-68369643fb47" data-node-name="Module"><span class="ast-node correction-node " id="stu_466d7b66-5fe4-4a1b-8ac6-0a40cdde17e5" data-node-id="466d7b66-5fe4-4a1b-8ac6-0a40cdde17e5" data-node-name="FunctionDef name: howManyEggCartons" data-key=0 data-parent-list-id="9c3b7a2c-766f-46b9-a185-5c84257df5c9">def howManyEggCartons(<span class="ast-node correction-node " id="stu_05c6edee-b43f-4646-8681-de36a9bc65f5" data-node-id="05c6edee-b43f-4646-8681-de36a9bc65f5" data-node-name="arguments" data-key=args><span class="ast-node correction-node " id="stu_be2e4308-5152-43c5-9675-d1972244357b" data-node-id="be2e4308-5152-43c5-9675-d1972244357b" data-node-name="arg(arg = eggs)" data-key=0 data-parent-list-id="406b92a8-4fdc-4e5f-bd04-4221c9d03adf">eggs</span></span>):<br>    <span class="ast-node correction-node " id="stu_b5f37b45-1601-4657-ab28-61d64816b568" data-node-id="b5f37b45-1601-4657-ab28-61d64816b568" data-node-name="Return" data-key=0 data-parent-list-id="efdd6c98-d679-4b60-a22b-0af7ccbe7ae1">return <span class="ast-node correction-node " id="stu_c8d3d8f2-3c00-4c83-ad90-a8ad5c00d4fe" data-node-id="c8d3d8f2-3c00-4c83-ad90-a8ad5c00d4fe" data-node-name="BinOp //" data-key=value><span class="ast-node correction-node  move-node" id="stu_a9dd551f-4605-45b8-ad84-032f68179c05" data-node-id="a9dd551f-4605-45b8-ad84-032f68179c05" data-node-name="Load identifier eggs" data-key=left>eggs</span> // <span class="ast-node correction-node " id="stu_e2bfe371-652f-4f1f-bb06-f8e86ef858e7" data-node-id="e2bfe371-652f-4f1f-bb06-f8e86ef858e7" data-node-name="Constant(value = 12)" data-key=right>12</span></span></span></span></span></pre>,<pre><span class="ast-node student-node " id="stu_decabb42-ed2a-4cd8-a01e-ffee5150ab3e" data-node-id="decabb42-ed2a-4cd8-a01e-ffee5150ab3e" data-node-name="Module"><span class="ast-node student-node " id="stu_623efee5-a7e5-4a8e-8138-210f6e705a21" data-node-id="623efee5-a7e5-4a8e-8138-210f6e705a21" data-node-name="FunctionDef name: howManyEggCartons" data-key=0 data-parent-list-id="b778b206-261d-40dc-bdd8-761a2aa87ec2">def howManyEggCartons(<span class="ast-node student-node " id="stu_cac6ef3c-046e-4456-b01d-69a0e41b38f6" data-node-id="cac6ef3c-046e-4456-b01d-69a0e41b38f6" data-node-name="arguments" data-key=args><span class="ast-node student-node " id="stu_4fb7e069-8e34-45ea-8bc1-ed06f47f6ca4" data-node-id="4fb7e069-8e34-45ea-8bc1-ed06f47f6ca4" data-node-name="arg(arg = eggs)" data-key=0 data-parent-list-id="be21e73d-05c7-4294-94ac-b3702526fbb6">eggs</span></span>):<br>    <span class="ast-node student-node  move-node" id="stu_2c890562-3a09-49ca-b4d5-d91e6a2b32cd" data-node-id="2c890562-3a09-49ca-b4d5-d91e6a2b32cd" data-node-name="Return" data-key=0 data-parent-list-id="d482aa12-bf69-4989-b72a-4023e91b8216">return <span class="ast-node student-node " id="stu_80a2eba3-4da2-4fa4-818d-9e1a82b14548" data-node-id="80a2eba3-4da2-4fa4-818d-9e1a82b14548" data-node-name="BinOp //" data-key=value><span class="ast-node student-node " id="stu_9ca65496-fbf2-49b3-9a27-e5655062ea6a" data-node-id="9ca65496-fbf2-49b3-9a27-e5655062ea6a" data-node-name="Load identifier eggs" data-key=left>eggs</span> // <span class="ast-node student-node " id="stu_7cddfada-1cf6-443f-aba0-47aaf04845a4" data-node-id="7cddfada-1cf6-443f-aba0-47aaf04845a4" data-node-name="Constant(value = 12)" data-key=right>12</span></span></span></span></span></pre>,"{'Action.MOVE_Stage.MOVE_a9dd551f-4605-45b8-ad84-032f68179c05', 'Action.INSERT_Stage.INSERT_91631358-aad5-473c-b7f0-7b061de34255', 'Action.INSERT_Stage.INSERT_6a67ad8f-3406-4465-afa9-4b567bf34b1b'}","{'Action.INSERT_Stage.INSERT_4a36ae25-7ba2-4fcc-b263-5ad702a90448', 'Action.INSERT_Stage.INSERT_624bde77-ce07-4e07-874a-d48f26cdc862', 'Action.INSERT_Stage.INSERT_735444b8-e18c-4c52-b34d-9fae08c5156d', 'Action.INSERT_Stage.INSERT_4b3e34d8-4319-4081-9da4-21490008d8ec', 'Action.INSERT_Stage.INSERT_bdf5a6ca-4f00-4f53-ae16-c1ffffbf2467', 'Action.INSERT_Stage.INSERT_8af0952e-d4b9-4aae-a891-9e9352c828c7', 'Action.INSERT_Stage.INSERT_ff1f1a19-abf2-46c5-8c89-7672d2d27d35', 'Action.INSERT_Stage.INSERT_32763f4a-c2aa-4941-873b-f6cf35e60a09', 'Action.INSERT_Stage.INSERT_d434f4af-3c07-4ed4-9941-0598e105293e', 'Action.INSERT_Stage.INSERT_0db4f74c-9f64-4cec-ab96-6239a1fb98e1', 'Action.INSERT_Stage.INSERT_429e57fd-2691-4ac8-a947-f9a18b18b94f', 'Action.INSERT_Stage.INSERT_f8f80c30-4426-4ab9-87da-6b9b43d50ed9', 'Action.MOVE_Stage.MOVE_2c890562-3a09-49ca-b4d5-d91e6a2b32cd', 'Action.INSERT_Stage.INSERT_f6966fa8-336f-4076-bd3e-780d077c6cde', 'Action.INSERT_Stage.INSERT_64837523-34db-4d70-81f8-4357d3f4f311', 'Action.INSERT_Stage.INSERT_092e8bc3-0ddc-4e9d-9c1b-8cbe8d0bd3c0', 'Action.INSERT_Stage.INSERT_fd0f5da6-4ee4-4ba8-b192-5002a318b763', 'Action.INSERT_Stage.INSERT_2b9ad1e7-b68b-48bd-bf69-025e658076b8'}",3,18
5,<pre><span class="ast-node correction-node " id="stu_e3ae2c30-83c4-4851-b548-4117463e8e1d" data-node-id="e3ae2c30-83c4-4851-b548-4117463e8e1d" data-node-name="Module"><span class="ast-node correction-node " id="stu_d4c418ba-b083-4334-ac77-62e0cccdcd33" data-node-id="d4c418ba-b083-4334-ac77-62e0cccdcd33" data-node-name="FunctionDef name: howManyEggCartons" data-key=0 data-parent-list-id="c60df02c-fd36-408d-9f52-3aa33f458666">def howManyEggCartons(<span class="ast-node correction-node " id="stu_c78d40d0-f073-4cca-83ac-de01096748ec" data-node-id="c78d40d0-f073-4cca-83ac-de01096748ec" data-node-name="arguments" data-key=args><span class="ast-node correction-node " id="stu_e82c1b2e-bd37-4532-8dc7-4bae54152a14" data-node-id="e82c1b2e-bd37-4532-8dc7-4bae54152a14" data-node-name="arg(arg = eggs)" data-key=0 data-parent-list-id="70c98424-6382-4ab2-bb1a-207581bf50ca">eggs</span></span>):<br>    <span class="ast-node correction-node " id="stu_66efdf90-ff47-4aed-8692-3275b88ae371" data-node-id="66efdf90-ff47-4aed-8692-3275b88ae371" data-node-name="If" data-key=0 data-parent-list-id="f1885b5d-da15-4d3e-8bb6-58b5a82789ba">if <span class="ast-node correction-node " id="stu_063875ba-914f-4587-9fab-c39b432f9813" data-node-id="063875ba-914f-4587-9fab-c39b432f9813" data-node-name="Compare operators: ['Eq']" data-key=test><span class="ast-node correction-node " id="stu_fed0d6b1-5df1-4457-8b8c-671a984228ba" data-node-id="fed0d6b1-5df1-4457-8b8c-671a984228ba" data-node-name="BinOp %" data-key=left><span class="ast-node correction-node  delete-node" id="stu_7b4487ff-a5c7-4d08-a6b7-d69696c45b87" data-node-id="7b4487ff-a5c7-4d08-a6b7-d69696c45b87" data-node-name="BinOp //" data-key=left><span class="ast-node correction-node  move-node" id="stu_99e16d68-b7b0-434d-beee-5f40815b1a9e" data-node-id="99e16d68-b7b0-434d-beee-5f40815b1a9e" data-node-name="Load identifier eggs" data-key=left>eggs</span> // <span class="ast-node correction-node  move-node" id="stu_9a1888c0-0dff-460d-bcfc-0b950bee02ff" data-node-id="9a1888c0-0dff-460d-bcfc-0b950bee02ff" data-node-name="Constant(value = 12)" data-key=right>12</span></span> % <span class="ast-node correction-node  delete-node" id="stu_eef8600a-29f1-4c7f-aace-b49fc585c03e" data-node-id="eef8600a-29f1-4c7f-aace-b49fc585c03e" data-node-name="Constant(value = 12)" data-key=right>12</span></span> == <span class="ast-node correction-node " id="stu_e0b6d91d-a22d-4d02-8ca3-acaaf48f24c3" data-node-id="e0b6d91d-a22d-4d02-8ca3-acaaf48f24c3" data-node-name="Constant(value = 0)" data-key=0 data-parent-list-id="e9c22a47-3347-4abd-b831-c158608c42ff">0</span></span>:<br>        <span class="ast-node correction-node " id="stu_4790ffcf-fd70-4de2-8040-c79ee0471425" data-node-id="4790ffcf-fd70-4de2-8040-c79ee0471425" data-node-name="Return" data-key=0 data-parent-list-id="bb3fb42e-ab86-4ace-ab50-2a8043f47e15">return <span class="ast-node correction-node " id="stu_d7417e25-2ca9-4b93-ad6e-c4abb22481ad" data-node-id="d7417e25-2ca9-4b93-ad6e-c4abb22481ad" data-node-name="BinOp //" data-key=value><span class="ast-node correction-node " id="stu_6eefc310-72c2-45a1-b06a-a7f847165525" data-node-id="6eefc310-72c2-45a1-b06a-a7f847165525" data-node-name="Load identifier eggs" data-key=left>eggs</span> // <span class="ast-node correction-node " id="stu_e2c48888-2bc0-4894-806a-ffbde638c1ca" data-node-id="e2c48888-2bc0-4894-806a-ffbde638c1ca" data-node-name="Constant(value = 12)" data-key=right>12</span></span></span><br>    else:<br>        <span class="ast-node correction-node " id="stu_3bb1256f-6b5d-48c9-bf73-2f6e01414e11" data-node-id="3bb1256f-6b5d-48c9-bf73-2f6e01414e11" data-node-name="Return" data-key=0 data-parent-list-id="a46a7882-e3c1-404d-ae6e-02377c78aa17">return <span class="ast-node correction-node " id="stu_52510b37-b83b-4c4a-9b49-a09a6db177f6" data-node-id="52510b37-b83b-4c4a-9b49-a09a6db177f6" data-node-name="BinOp +" data-key=value><span class="ast-node correction-node " id="stu_5ce9c386-3f7d-4453-b483-5ca135989872" data-node-id="5ce9c386-3f7d-4453-b483-5ca135989872" data-node-name="BinOp //" data-key=left><span class="ast-node correction-node " id="stu_aeb551e1-6e76-4fa9-ac95-71bfb6b9d28e" data-node-id="aeb551e1-6e76-4fa9-ac95-71bfb6b9d28e" data-node-name="Load identifier eggs" data-key=left>eggs</span> // <span class="ast-node correction-node " id="stu_8f3c0af3-335a-4b1e-ad3a-e78bf1d86242" data-node-id="8f3c0af3-335a-4b1e-ad3a-e78bf1d86242" data-node-name="Constant(value = 12)" data-key=right>12</span></span> + <span class="ast-node correction-node " id="stu_952079d4-4dfd-4dbd-80da-f2da669cc62c" data-node-id="952079d4-4dfd-4dbd-80da-f2da669cc62c" data-node-name="Constant(value = 1)" data-key=right>1</span></span></span></span></span></span></pre>,<pre><span class="ast-node student-node " id="stu_3ed1fa0d-9ef6-4817-8cc4-3b4f62805e11" data-node-id="3ed1fa0d-9ef6-4817-8cc4-3b4f62805e11" data-node-name="Module"><span class="ast-node student-node " id="stu_4435ed43-ee2f-481f-a5f6-27683dcd5438" data-node-id="4435ed43-ee2f-481f-a5f6-27683dcd5438" data-node-name="FunctionDef name: howManyEggCartons" data-key=0 data-parent-list-id="73b41dd4-9db0-47c6-8728-9ea05e29e294">def howManyEggCartons(<span class="ast-node student-node " id="stu_1c4d35fa-4432-40b3-a3c1-36fafe7e818d" data-node-id="1c4d35fa-4432-40b3-a3c1-36fafe7e818d" data-node-name="arguments" data-key=args><span class="ast-node student-node " id="stu_0bcb618a-e58b-4aec-a603-fc93503ef64e" data-node-id="0bcb618a-e58b-4aec-a603-fc93503ef64e" data-node-name="arg(arg = eggs)" data-key=0 data-parent-list-id="5612cacd-a132-46ac-87de-dcce43e84259">eggs</span></span>):<br>    <span class="ast-node student-node " id="stu_b8df3c2e-f926-4243-93a9-a82fd793f6df" data-node-id="b8df3c2e-f926-4243-93a9-a82fd793f6df" data-node-name="If" data-key=0 data-parent-list-id="3a842be7-25ad-4844-ba3f-fe7d694a43e4">if <span class="ast-node student-node  rename-node" id="stu_4713a821-6171-4350-bebe-bff5e01beb28" data-node-id="4713a821-6171-4350-bebe-bff5e01beb28" data-node-name="Compare operators: ['Eq']" data-key=test><span class="ast-node student-node " id="stu_c22bc729-c320-4cd3-ad94-b206508371ea" data-node-id="c22bc729-c320-4cd3-ad94-b206508371ea" data-node-name="BinOp %" data-key=left><span class="ast-node student-node " id="stu_fe8b0e9c-6c30-402c-85da-8f7eb00f4c51" data-node-id="fe8b0e9c-6c30-402c-85da-8f7eb00f4c51" data-node-name="BinOp //" data-key=left><span class="ast-node student-node " id="stu_02cd982a-a612-47d5-bb08-0866a70c8780" data-node-id="02cd982a-a612-47d5-bb08-0866a70c8780" data-node-name="Load identifier eggs" data-key=left>eggs</span> // <span class="ast-node student-node " id="stu_e00cc0aa-2329-40ae-9a10-e628b423c2ac" data-node-id="e00cc0aa-2329-40ae-9a10-e628b423c2ac" data-node-name="Constant(value = 12)" data-key=right>12</span></span> % <span class="ast-node student-node " id="stu_77cbbd14-4bd5-4fc1-a3a3-675707dbf6a0" data-node-id="77cbbd14-4bd5-4fc1-a3a3-675707dbf6a0" data-node-name="Constant(value = 12)" data-key=right>12</span></span> == <span class="ast-node student-node " id="stu_951ad7b3-c926-44a1-b65c-7b39a518447c" data-node-id="951ad7b3-c926-44a1-b65c-7b39a518447c" data-node-name="Constant(value = 0)" data-key=0 data-parent-list-id="8b34d813-f1bd-49da-94f0-0216aa6abc20">0</span></span>:<br>        <span class="ast-node student-node " id="stu_aba85814-497b-4237-9a6f-18e02430f142" data-node-id="aba85814-497b-4237-9a6f-18e02430f142" data-node-name="Return" data-key=0 data-parent-list-id="56292667-9f35-4eb2-8347-00e5a1fe1a7f">return <span class="ast-node student-node " id="stu_376c5709-a2bf-42fa-a399-dffdecbec9af" data-node-id="376c5709-a2bf-42fa-a399-dffdecbec9af" data-node-name="BinOp //" data-key=value><span class="ast-node student-node " id="stu_54c9e328-55c4-47cd-accd-4fd5dc379dc0" data-node-id="54c9e328-55c4-47cd-accd-4fd5dc379dc0" data-node-name="Load identifier eggs" data-key=left>eggs</span> // <span class="ast-node student-node " id="stu_b958564a-c4a1-443a-8d0b-7ce3c24eda35" data-node-id="b958564a-c4a1-443a-8d0b-7ce3c24eda35" data-node-name="Constant(value = 12)" data-key=right>12</span></span></span><br>    else:<br>        <span class="ast-node student-node " id="stu_f17f4389-8efd-41dc-a863-e385374ce1d6" data-node-id="f17f4389-8efd-41dc-a863-e385374ce1d6" data-node-name="Return" data-key=0 data-parent-list-id="e3e52005-c310-468d-b71f-85e70bd6b322">return <span class="ast-node student-node " id="stu_e033ab2d-0a31-4994-b185-ad1f31f68315" data-node-id="e033ab2d-0a31-4994-b185-ad1f31f68315" data-node-name="BinOp +" data-key=value><span class="ast-node student-node " id="stu_e33527f7-c80e-44bb-bdcc-0cccad5f1538" data-node-id="e33527f7-c80e-44bb-bdcc-0cccad5f1538" data-node-name="BinOp //" data-key=left><span class="ast-node student-node " id="stu_0ecf22dc-a23f-4c19-8ae6-5418307a7189" data-node-id="0ecf22dc-a23f-4c19-8ae6-5418307a7189" data-node-name="Load identifier eggs" data-key=left>eggs</span> // <span class="ast-node student-node " id="stu_9ab51e43-5887-4852-8500-99f677645878" data-node-id="9ab51e43-5887-4852-8500-99f677645878" data-node-name="Constant(value = 12)" data-key=right>12</span></span> + <span class="ast-node student-node " id="stu_90ca1bec-334a-4a90-a462-824bbb3a86c5" data-node-id="90ca1bec-334a-4a90-a462-824bbb3a86c5" data-node-name="Constant(value = 1)" data-key=right>1</span></span></span></span></span></span></pre>,"{'Action.DELETE_Stage.DELETE_eef8600a-29f1-4c7f-aace-b49fc585c03e', 'Action.MOVE_Stage.MOVE_9a1888c0-0dff-460d-bcfc-0b950bee02ff', 'Action.DELETE_Stage.DELETE_7b4487ff-a5c7-4d08-a6b7-d69696c45b87', 'Action.MOVE_Stage.MOVE_99e16d68-b7b0-434d-beee-5f40815b1a9e'}","{'Action.MOVE_Stage.MOVE_56292667-9f35-4eb2-8347-00e5a1fe1a7f', 'Action.INSERT_Stage.INSERT_a6b0a88d-7997-4f0c-aa4c-6c9df2e1e9d1', 'Action.INSERT_Stage.INSERT_88097a61-618a-4269-8827-676bc0e936a0', 'Action.INSERT_Stage.INSERT_ee71d801-8b51-479f-a9d0-8f401aedd0db', 'Action.INSERT_Stage.INSERT_08724a9d-3756-44c6-9945-620c92a65e81', 'Action.MOVE_Stage.ALIGN_KEYS_e3e52005-c310-468d-b71f-85e70bd6b322', 'Action.INSERT_Stage.INSERT_da87f99f-61f2-4096-9967-eacf9aecd2a7', 'Action.INSERT_Stage.INSERT_8ee49fdb-1ce6-46e0-a9ae-53436a13a279', 'Action.INSERT_Stage.INSERT_bd44dc96-a446-45e7-a54f-96e6b866d3e3', 'Action.INSERT_Stage.INSERT_eb030484-8240-47c9-8517-02b8b04f4a75', 'Action.INSERT_Stage.INSERT_b506695b-bc1f-4e96-93d3-e76639074c42'}{'Action.UPDATE_Stage.UPDATE_e3e52005-c310-468d-b71f-85e70bd6b322'}{'Action.UPDATE_Stage.UPDATE_4713a821-6171-4350-bebe-bff5e01beb28'}",4,13
6,<pre><span class="ast-node correction-node " id="stu_354f5358-f3c4-45f8-9db5-3cd3072c782f" data-node-id="354f5358-f3c4-45f8-9db5-3cd3072c782f" data-node-name="Module"><span class="ast-node correction-node " id="stu_cde5bed2-7c05-46b2-b232-32b092243007" data-node-id="cde5bed2-7c05-46b2-b232-32b092243007" data-node-name="FunctionDef name: howManyEggCartons" data-key=0 data-parent-list-id="66932582-d7b7-4c10-8153-d916d0a045ad">def howManyEggCartons(<span class="ast-node correction-node " id="stu_928f4d15-b9d3-4780-9798-1fe56a961ad8" data-node-id="928f4d15-b9d3-4780-9798-1fe56a961ad8" data-node-name="arguments" data-key=args><span class="ast-node correction-node " id="stu_f896117a-f5ea-4e8f-8110-6bb78a7b801e" data-node-id="f896117a-f5ea-4e8f-8110-6bb78a7b801e" data-node-name="arg(arg = eggs)" data-key=0 data-parent-list-id="f43ab090-83c7-4087-adf8-252a2132f11b">eggs</span></span>):<br>    <span class="ast-node correction-node " id="stu_2660a76d-0b97-4692-9c88-ea8bcd71ba23" data-node-id="2660a76d-0b97-4692-9c88-ea8bcd71ba23" data-node-name="If" data-key=0 data-parent-list-id="b46ae708-41fd-45cf-8ede-8fee1d7c0ba9">if <span class="ast-node correction-node " id="stu_31c1532e-62ac-429c-8d05-a5f73f29a0e3" data-node-id="31c1532e-62ac-429c-8d05-a5f73f29a0e3" data-node-name="Compare operators: ['Eq']" data-key=test><span class="ast-node correction-node " id="stu_bb55dfe2-c7b0-4429-adaa-11d8a9f4d3ee" data-node-id="bb55dfe2-c7b0-4429-adaa-11d8a9f4d3ee" data-node-name="BinOp %" data-key=left><span class="ast-node correction-node  delete-node" id="stu_68f2de0f-26e7-4fa8-8690-6ab6226f6f15" data-node-id="68f2de0f-26e7-4fa8-8690-6ab6226f6f15" data-node-name="BinOp //" data-key=left><span class="ast-node correction-node  move-node" id="stu_dd0b31cf-9515-4865-af8c-202c48877428" data-node-id="dd0b31cf-9515-4865-af8c-202c48877428" data-node-name="Load identifier eggs" data-key=left>eggs</span> // <span class="ast-node correction-node  move-node" id="stu_f6b2f8b3-3f8a-4ce5-85e0-c80c0be1db79" data-node-id="f6b2f8b3-3f8a-4ce5-85e0-c80c0be1db79" data-node-name="Constant(value = 12)" data-key=right>12</span></span> % <span class="ast-node correction-node  delete-node" id="stu_89f79db9-9f37-4a0b-bceb-e084add573cc" data-node-id="89f79db9-9f37-4a0b-bceb-e084add573cc" data-node-name="Constant(value = 12)" data-key=right>12</span></span> == <span class="ast-node correction-node " id="stu_d6e84cb4-bf8a-46bc-b40e-4e820ab89103" data-node-id="d6e84cb4-bf8a-46bc-b40e-4e820ab89103" data-node-name="Constant(value = 0)" data-key=0 data-parent-list-id="442c0abe-cb15-4971-a5dc-0bd91334bba9">0</span></span>:<br>        <span class="ast-node correction-node " id="stu_2693203e-93f9-4c8f-b8ee-70b56e338347" data-node-id="2693203e-93f9-4c8f-b8ee-70b56e338347" data-node-name="Return" data-key=0 data-parent-list-id="e6cda39e-fb94-4c5f-b8aa-333df228bc88">return <span class="ast-node correction-node " id="stu_7084fe45-7381-4df7-b058-345cbb619792" data-node-id="7084fe45-7381-4df7-b058-345cbb619792" data-node-name="BinOp //" data-key=value><span class="ast-node correction-node " id="stu_69add143-a418-40ec-aab8-c5f2f07cf0b9" data-node-id="69add143-a418-40ec-aab8-c5f2f07cf0b9" data-node-name="Load identifier eggs" data-key=left>eggs</span> // <span class="ast-node correction-node " id="stu_c032a32f-3b38-4a7d-a3f9-15c0405754ad" data-node-id="c032a32f-3b38-4a7d-a3f9-15c0405754ad" data-node-name="Constant(value = 12)" data-key=right>12</span></span></span></span><br>    <span class="ast-node correction-node  delete-node" id="stu_1fed4598-888e-4cde-bd12-ef63ca936b18" data-node-id="1fed4598-888e-4cde-bd12-ef63ca936b18" data-node-name="If" data-key=1 data-parent-list-id="b46ae708-41fd-45cf-8ede-8fee1d7c0ba9">if <span class="ast-node correction-node  delete-node" id="stu_b3c344ff-ff07-47ac-8215-c2223888bea8" data-node-id="b3c344ff-ff07-47ac-8215-c2223888bea8" data-node-name="Compare operators: ['NotEq']" data-key=test><span class="ast-node correction-node  delete-node" id="stu_70a84369-bd0d-4e60-8c01-11798a538d99" data-node-id="70a84369-bd0d-4e60-8c01-11798a538d99" data-node-name="BinOp %" data-key=left><span class="ast-node correction-node  delete-node" id="stu_0a7e817c-fb60-4310-ba99-0a474fdb9f53" data-node-id="0a7e817c-fb60-4310-ba99-0a474fdb9f53" data-node-name="BinOp //" data-key=left><span class="ast-node correction-node  delete-node" id="stu_882a0b9a-e095-4272-86fc-46a9e7f37889" data-node-id="882a0b9a-e095-4272-86fc-46a9e7f37889" data-node-name="Load identifier eggs" data-key=left>eggs</span> // <span class="ast-node correction-node  delete-node" id="stu_3365cde2-4c17-4a1c-8995-f0f468f91d28" data-node-id="3365cde2-4c17-4a1c-8995-f0f468f91d28" data-node-name="Constant(value = 12)" data-key=right>12</span></span> % <span class="ast-node correction-node  delete-node" id="stu_f06b5739-5842-45b6-9471-45a4013628ae" data-node-id="f06b5739-5842-45b6-9471-45a4013628ae" data-node-name="Constant(value = 12)" data-key=right>12</span></span> != <span class="ast-node correction-node  delete-node" id="stu_7882af7f-68c3-4d72-ad4f-efd11d3a43b5" data-node-id="7882af7f-68c3-4d72-ad4f-efd11d3a43b5" data-node-name="Constant(value = 0)" data-key=0 data-parent-list-id="73b7235b-5614-4d57-9483-7395d2975116">0</span></span>:<br>        <span class="ast-node correction-node  move-node" id="stu_8dea5f0d-0590-4cb1-9012-f287716d8313" data-node-id="8dea5f0d-0590-4cb1-9012-f287716d8313" data-node-name="Return" data-key=0 data-parent-list-id="3835e1ef-b253-4279-8178-feb709ef78fc">return <span class="ast-node correction-node " id="stu_424cb10d-2bf6-407a-9681-5ff2bf84cb80" data-node-id="424cb10d-2bf6-407a-9681-5ff2bf84cb80" data-node-name="BinOp +" data-key=value><span class="ast-node correction-node " id="stu_39d34b67-e2e4-4d7c-9372-4d8d9df15bef" data-node-id="39d34b67-e2e4-4d7c-9372-4d8d9df15bef" data-node-name="BinOp //" data-key=left><span class="ast-node correction-node " id="stu_d6d539a3-ac01-4b55-96e6-8d4e52ba17ba" data-node-id="d6d539a3-ac01-4b55-96e6-8d4e52ba17ba" data-node-name="Load identifier eggs" data-key=left>eggs</span> // <span class="ast-node correction-node " id="stu_ed9a87b7-369b-4736-8b46-22b53fc4780f" data-node-id="ed9a87b7-369b-4736-8b46-22b53fc4780f" data-node-name="Constant(value = 12)" data-key=right>12</span></span> + <span class="ast-node correction-node " id="stu_7588cc4b-6183-4de5-8786-1225b00b3f1d" data-node-id="7588cc4b-6183-4de5-8786-1225b00b3f1d" data-node-name="Constant(value = 1)" data-key=right>1</span></span></span></span></span></span></pre>,<pre><span class="ast-node student-node " id="stu_1b04b48d-e4be-470e-af35-2a9ef0d98e71" data-node-id="1b04b48d-e4be-470e-af35-2a9ef0d98e71" data-node-name="Module"><span class="ast-node student-node " id="stu_a73e6f50-71df-4e08-a8c4-c2b8ad2b0e8e" data-node-id="a73e6f50-71df-4e08-a8c4-c2b8ad2b0e8e" data-node-name="FunctionDef name: howManyEggCartons" data-key=0 data-parent-list-id="25611e30-f46a-444d-aa14-bc33708ee04e">def howManyEggCartons(<span class="ast-node student-node " id="stu_601cab9a-e71d-49d4-bce8-d072b2a0be14" data-node-id="601cab9a-e71d-49d4-bce8-d072b2a0be14" data-node-name="arguments" data-key=args><span class="ast-node student-node " id="stu_9d504575-9add-42c2-80ba-62ea19248e49" data-node-id="9d504575-9add-42c2-80ba-62ea19248e49" data-node-name="arg(arg = eggs)" data-key=0 data-parent-list-id="296d27c6-3cb3-40ca-a6ef-39904712d106">eggs</span></span>):<br>    <span class="ast-node student-node " id="stu_cb4c0c9c-ea3b-4457-9bed-955c0e506e5a" data-node-id="cb4c0c9c-ea3b-4457-9bed-955c0e506e5a" data-node-name="If" data-key=0 data-parent-list-id="60e5a256-e45a-4e8f-b1b9-43cd8a1b3b22">if <span class="ast-node student-node " id="stu_de1ce358-0bf9-4a7a-914e-251d2cbb42d3" data-node-id="de1ce358-0bf9-4a7a-914e-251d2cbb42d3" data-node-name="Compare operators: ['Eq']" data-key=test><span class="ast-node student-node " id="stu_6a4f6fb4-6abe-49ba-8da3-2e454e059409" data-node-id="6a4f6fb4-6abe-49ba-8da3-2e454e059409" data-node-name="BinOp %" data-key=left><span class="ast-node student-node " id="stu_55540e9e-8680-4ccc-a5be-ed3b5d33be06" data-node-id="55540e9e-8680-4ccc-a5be-ed3b5d33be06" data-node-name="BinOp //" data-key=left><span class="ast-node student-node " id="stu_7f28835b-ef37-4f38-a624-2f3615d16cca" data-node-id="7f28835b-ef37-4f38-a624-2f3615d16cca" data-node-name="Load identifier eggs" data-key=left>eggs</span> // <span class="ast-node student-node " id="stu_c959f59f-c5bb-46b7-a0b2-cc1ad29388e0" data-node-id="c959f59f-c5bb-46b7-a0b2-cc1ad29388e0" data-node-name="Constant(value = 12)" data-key=right>12</span></span> % <span class="ast-node student-node " id="stu_24deb94d-6c86-4b3f-bc1e-2c19e731af9a" data-node-id="24deb94d-6c86-4b3f-bc1e-2c19e731af9a" data-node-name="Constant(value = 12)" data-key=right>12</span></span> == <span class="ast-node student-node " id="stu_9480d367-b098-4b1f-a6eb-76bd757dd44a" data-node-id="9480d367-b098-4b1f-a6eb-76bd757dd44a" data-node-name="Constant(value = 0)" data-key=0 data-parent-list-id="2937dba8-a416-4e18-9d85-ed846fe9d76f">0</span></span>:<br>        <span class="ast-node student-node " id="stu_637a3928-fb7c-4d25-ba30-4956aa6f777d" data-node-id="637a3928-fb7c-4d25-ba30-4956aa6f777d" data-node-name="Return" data-key=0 data-parent-list-id="7fa90812-05cc-4084-9b49-3facfc83d390">return <span class="ast-node student-node " id="stu_3ee34b25-31c8-4bc3-ac78-3f21348cff02" data-node-id="3ee34b25-31c8-4bc3-ac78-3f21348cff02" data-node-name="BinOp //" data-key=value><span class="ast-node student-node " id="stu_4bccdc93-e800-4c81-95f1-7d0f7ac1841b" data-node-id="4bccdc93-e800-4c81-95f1-7d0f7ac1841b" data-node-name="Load identifier eggs" data-key=left>eggs</span> // <span class="ast-node student-node " id="stu_cd6e2382-55eb-4640-9d0c-365b0540a8dd" data-node-id="cd6e2382-55eb-4640-9d0c-365b0540a8dd" data-node-name="Constant(value = 12)" data-key=right>12</span></span></span></span><br>    <span class="ast-node student-node " id="stu_eba1af2a-8844-4cec-8c40-0127641995be" data-node-id="eba1af2a-8844-4cec-8c40-0127641995be" data-node-name="If" data-key=1 data-parent-list-id="60e5a256-e45a-4e8f-b1b9-43cd8a1b3b22">if <span class="ast-node student-node " id="stu_f497e8d0-8744-42e8-b999-3a01e66a3a66" data-node-id="f497e8d0-8744-42e8-b999-3a01e66a3a66" data-node-name="Compare operators: ['NotEq']" data-key=test><span class="ast-node student-node " id="stu_1f68a2ec-bd64-4115-83a6-3a6c8b59cc09" data-node-id="1f68a2ec-bd64-4115-83a6-3a6c8b59cc09" data-node-name="BinOp %" data-key=left><span class="ast-node student-node " id="stu_9d1b677a-2e8d-411a-94be-7fed4dc01f9f" data-node-id="9d1b677a-2e8d-411a-94be-7fed4dc01f9f" data-node-name="BinOp //" data-key=left><span class="ast-node student-node " id="stu_01bcbe2e-3611-4985-b0b5-8d87b90ccf5f" data-node-id="01bcbe2e-3611-4985-b0b5-8d87b90ccf5f" data-node-name="Load identifier eggs" data-key=left>eggs</span> // <span class="ast-node student-node " id="stu_36cff6a3-445c-4bc0-8ead-de6519a1128d" data-node-id="36cff6a3-445c-4bc0-8ead-de6519a1128d" data-node-name="Constant(value = 12)" data-key=right>12</span></span> % <span class="ast-node student-node " id="stu_7654a87f-4f88-42b0-9bad-3f0a82c8d863" data-node-id="7654a87f-4f88-42b0-9bad-3f0a82c8d863" data-node-name="Constant(value = 12)" data-key=right>12</span></span> != <span class="ast-node student-node " id="stu_ecf76dd3-e74f-449f-8172-428bbc22d11e" data-node-id="ecf76dd3-e74f-449f-8172-428bbc22d11e" data-node-name="Constant(value = 0)" data-key=0 data-parent-list-id="9e4e4222-42ee-41e2-944e-d4edc6754e4d">0</span></span>:<br>        <span class="ast-node student-node " id="stu_0f97d5d2-2dd5-4849-9060-71bb157dce11" data-node-id="0f97d5d2-2dd5-4849-9060-71bb157dce11" data-node-name="Return" data-key=0 data-parent-list-id="e91d8c29-9e98-4273-8067-13a4d90281bc">return <span class="ast-node student-node  rename-node" id="stu_f552ad26-2c45-49c3-97eb-d7a08d375bf8" data-node-id="f552ad26-2c45-49c3-97eb-d7a08d375bf8" data-node-name="BinOp +" data-key=value><span class="ast-node student-node " id="stu_a95f2b81-fe90-4a3a-bcfb-8b0e2cc26ec0" data-node-id="a95f2b81-fe90-4a3a-bcfb-8b0e2cc26ec0" data-node-name="BinOp //" data-key=left><span class="ast-node student-node " id="stu_529ec9cd-f69a-4c0a-beab-324d5e4552cf" data-node-id="529ec9cd-f69a-4c0a-beab-324d5e4552cf" data-node-name="Load identifier eggs" data-key=left>eggs</span> // <span class="ast-node student-node " id="stu_0e6c1d50-ac67-4db0-be36-3122e4ed843e" data-node-id="0e6c1d50-ac67-4db0-be36-3122e4ed843e" data-node-name="Constant(value = 12)" data-key=right>12</span></span> + <span class="ast-node student-node " id="stu_90549087-fb67-4315-86b9-7545a8674864" data-node-id="90549087-fb67-4315-86b9-7545a8674864" data-node-name="Constant(value = 1)" data-key=right>1</span></span></span></span></span></span></pre>,"{'Action.DELETE_Stage.DELETE_f06b5739-5842-45b6-9471-45a4013628ae', 'Action.DELETE_Stage.DELETE_3835e1ef-b253-4279-8178-feb709ef78fc', 'Action.DELETE_Stage.DELETE_882a0b9a-e095-4272-86fc-46a9e7f37889', 'Action.DELETE_Stage.DELETE_3365cde2-4c17-4a1c-8995-f0f468f91d28', 'Action.DELETE_Stage.DELETE_0a7e817c-fb60-4310-ba99-0a474fdb9f53', 'Action.MOVE_Stage.MOVE_8dea5f0d-0590-4cb1-9012-f287716d8313', 'Action.DELETE_Stage.DELETE_1fed4598-888e-4cde-bd12-ef63ca936b18', 'Action.DELETE_Stage.DELETE_70a84369-bd0d-4e60-8c01-11798a538d99', 'Action.DELETE_Stage.DELETE_7882af7f-68c3-4d72-ad4f-efd11d3a43b5', 'Action.DELETE_Stage.DELETE_73b7235b-5614-4d57-9483-7395d2975116', 'Action.DELETE_Stage.DELETE_b3c344ff-ff07-47ac-8215-c2223888bea8'}{'Action.MOVE_Stage.MOVE_dd0b31cf-9515-4865-af8c-202c48877428', 'Action.DELETE_Stage.DELETE_89f79db9-9f37-4a0b-bceb-e084add573cc', 'Action.DELETE_Stage.DELETE_68f2de0f-26e7-4fa8-8690-6ab6226f6f15', 'Action.MOVE_Stage.MOVE_f6b2f8b3-3f8a-4ce5-85e0-c80c0be1db79'}",{'Action.UPDATE_Stage.UPDATE_f552ad26-2c45-49c3-97eb-d7a08d375bf8'},15,1
7,<pre><span class="ast-node correction-node " id="stu_73cf5775-2d09-48ca-9c4c-60bb6f2c84d0" data-node-id="73cf5775-2d09-48ca-9c4c-60bb6f2c84d0" data-node-name="Module"><span class="ast-node correction-node " id="stu_17408454-b1c3-4b57-9a77-0eea4fb2ef0a" data-node-id="17408454-b1c3-4b57-9a77-0eea4fb2ef0a" data-node-name="FunctionDef name: howManyEggCartons" data-key=0 data-parent-list-id="3baa4031-dd4f-4dbd-878c-032705870e33">def howManyEggCartons(<span class="ast-node correction-node " id="stu_387146a3-c3f9-45fc-86b5-05a6e7e4c5c0" data-node-id="387146a3-c3f9-45fc-86b5-05a6e7e4c5c0" data-node-name="arguments" data-key=args><span class="ast-node correction-node " id="stu_66d8b578-d1e6-4146-912a-0fc6b89d0475" data-node-id="66d8b578-d1e6-4146-912a-0fc6b89d0475" data-node-name="arg(arg = eggs)" data-key=0 data-parent-list-id="003a2778-9563-4549-8674-e72b57007500">eggs</span></span>):<br>    <span class="ast-node correction-node " id="stu_1cd8f47b-c11b-471d-a14a-4441b243257f" data-node-id="1cd8f47b-c11b-471d-a14a-4441b243257f" data-node-name="If" data-key=0 data-parent-list-id="c40c6752-6a15-4dee-b959-e2dd4aad6ec9">if <span class="ast-node correction-node " id="stu_f0c2df1d-2bcb-4dde-ab3c-4e8a1a31a29a" data-node-id="f0c2df1d-2bcb-4dde-ab3c-4e8a1a31a29a" data-node-name="Compare operators: ['Eq']" data-key=test><span class="ast-node correction-node  rename-node move-node" id="stu_f9413069-a506-4f9b-8860-cb80db9a6f9a" data-node-id="f9413069-a506-4f9b-8860-cb80db9a6f9a" data-node-name="BinOp %" data-key=left><span class="ast-node correction-node " id="stu_e8559eba-8128-4a7d-93a0-7f200c7bf2f9" data-node-id="e8559eba-8128-4a7d-93a0-7f200c7bf2f9" data-node-name="BinOp //" data-key=left><span class="ast-node correction-node  move-node" id="stu_f1aeb68b-2768-4680-b7c7-822638f7f16c" data-node-id="f1aeb68b-2768-4680-b7c7-822638f7f16c" data-node-name="Load identifier eggs" data-key=left>eggs</span> // <span class="ast-node correction-node " id="stu_73b7fff7-bb0f-422d-a8d5-473f312b54e7" data-node-id="73b7fff7-bb0f-422d-a8d5-473f312b54e7" data-node-name="Constant(value = 12)" data-key=right>12</span></span> % <span class="ast-node correction-node  rename-node" id="stu_898cb722-4a64-40d3-a936-df881932216f" data-node-id="898cb722-4a64-40d3-a936-df881932216f" data-node-name="Constant(value = 12)" data-key=right>12</span></span> == <span class="ast-node correction-node " id="stu_13d7de3e-7313-4b13-9e3e-731f98fce7ac" data-node-id="13d7de3e-7313-4b13-9e3e-731f98fce7ac" data-node-name="Constant(value = 0)" data-key=0 data-parent-list-id="60caf46d-4cf3-4d73-b782-cb61f50a5fa2">0</span></span>:<br>        <span class="ast-node correction-node " id="stu_d76495dc-d2a5-476f-9397-f4d3f5aebc3c" data-node-id="d76495dc-d2a5-476f-9397-f4d3f5aebc3c" data-node-name="Return" data-key=0 data-parent-list-id="95726961-a6de-44c7-bd61-29509788f6a3">return <span class="ast-node correction-node  delete-node" id="stu_a9252939-35d9-4986-9d08-f8d6de38deef" data-node-id="a9252939-35d9-4986-9d08-f8d6de38deef" data-node-name="BinOp //" data-key=value><span class="ast-node correction-node  move-node" id="stu_6b9191e1-39f0-40bb-9a35-48253f818594" data-node-id="6b9191e1-39f0-40bb-9a35-48253f818594" data-node-name="Load identifier eggs" data-key=left>eggs</span> // <span class="ast-node correction-node  delete-node" id="stu_04309425-d838-4578-b40c-f7cf5ec87566" data-node-id="04309425-d838-4578-b40c-f7cf5ec87566" data-node-name="Constant(value = 12)" data-key=right>12</span></span></span></span><br>    <span class="ast-node correction-node " id="stu_3224db32-e781-41b5-b428-63e2ce15fb5a" data-node-id="3224db32-e781-41b5-b428-63e2ce15fb5a" data-node-name="If" data-key=1 data-parent-list-id="c40c6752-6a15-4dee-b959-e2dd4aad6ec9">if <span class="ast-node correction-node  rename-node" id="stu_c8e2789d-92fc-4b6c-abce-726bfd53ab13" data-node-id="c8e2789d-92fc-4b6c-abce-726bfd53ab13" data-node-name="Compare operators: ['NotEq']" data-key=test><span class="ast-node correction-node " id="stu_5f89e489-6c81-455c-a8df-c716427150f9" data-node-id="5f89e489-6c81-455c-a8df-c716427150f9" data-node-name="BinOp %" data-key=left><span class="ast-node correction-node  delete-node" id="stu_3d0682eb-6ad4-485c-9979-02126978c6d8" data-node-id="3d0682eb-6ad4-485c-9979-02126978c6d8" data-node-name="BinOp //" data-key=left><span class="ast-node correction-node  move-node" id="stu_19ad9487-7965-48c7-bfca-e411a80e8a44" data-node-id="19ad9487-7965-48c7-bfca-e411a80e8a44" data-node-name="Load identifier eggs" data-key=left>eggs</span> // <span class="ast-node correction-node  move-node" id="stu_57013a2e-5505-482f-a064-c94cdeaced29" data-node-id="57013a2e-5505-482f-a064-c94cdeaced29" data-node-name="Constant(value = 12)" data-key=right>12</span></span> % <span class="ast-node correction-node  delete-node" id="stu_869ec2ca-fdeb-4640-bc03-32404279eb11" data-node-id="869ec2ca-fdeb-4640-bc03-32404279eb11" data-node-name="Constant(value = 12)" data-key=right>12</span></span> != <span class="ast-node correction-node " id="stu_a8bae1fb-2842-466d-bed7-722884851510" data-node-id="a8bae1fb-2842-466d-bed7-722884851510" data-node-name="Constant(value = 0)" data-key=0 data-parent-list-id="ef4be5c3-78d8-41dd-acb3-27318bebf83d">0</span></span>:<br>        <span class="ast-node correction-node " id="stu_05bad8ab-5a46-4c26-ab1a-356440f1d0f2" data-node-id="05bad8ab-5a46-4c26-ab1a-356440f1d0f2" data-node-name="Return" data-key=0 data-parent-list-id="f22b8919-38f1-438e-a6ce-6aaa0bf0a562">return <span class="ast-node correction-node  delete-node" id="stu_629a5e63-bf00-4732-89dc-19ab54d6304a" data-node-id="629a5e63-bf00-4732-89dc-19ab54d6304a" data-node-name="BinOp -" data-key=value><span class="ast-node correction-node  move-node" id="stu_e6a4e092-27ef-4bc9-b72c-ac36ae1bc08b" data-node-id="e6a4e092-27ef-4bc9-b72c-ac36ae1bc08b" data-node-name="BinOp //" data-key=left><span class="ast-node correction-node " id="stu_35b13aa2-cc9c-4c00-b733-ed27bc5b708a" data-node-id="35b13aa2-cc9c-4c00-b733-ed27bc5b708a" data-node-name="Load identifier eggs" data-key=left>eggs</span> // <span class="ast-node correction-node " id="stu_cdcc83d7-7ca1-4e65-8936-2e9741fc2200" data-node-id="cdcc83d7-7ca1-4e65-8936-2e9741fc2200" data-node-name="Constant(value = 12)" data-key=right>12</span></span> - <span class="ast-node correction-node  delete-node" id="stu_a39d7ec2-c37a-4ecc-8a45-35a282e55bc5" data-node-id="a39d7ec2-c37a-4ecc-8a45-35a282e55bc5" data-node-name="Constant(value = 1)" data-key=right>1</span></span></span></span></span></span></pre>,<pre><span class="ast-node student-node " id="stu_30d55376-2f13-462a-953c-01b9100cc62e" data-node-id="30d55376-2f13-462a-953c-01b9100cc62e" data-node-name="Module"><span class="ast-node student-node " id="stu_03067cf7-2c70-441d-ae50-fd2ab85ab310" data-node-id="03067cf7-2c70-441d-ae50-fd2ab85ab310" data-node-name="FunctionDef name: howManyEggCartons" data-key=0 data-parent-list-id="4d3b64eb-ca1a-4287-adc6-0494ec14f6e9">def howManyEggCartons(<span class="ast-node student-node " id="stu_a751ea0d-3a1a-455d-b95a-5e6927bb59be" data-node-id="a751ea0d-3a1a-455d-b95a-5e6927bb59be" data-node-name="arguments" data-key=args><span class="ast-node student-node " id="stu_094ee7a2-bb27-4b84-bf89-48a2c17714d2" data-node-id="094ee7a2-bb27-4b84-bf89-48a2c17714d2" data-node-name="arg(arg = eggs)" data-key=0 data-parent-list-id="a52ed833-890d-49e6-84c9-c05a7ebdec4c">eggs</span></span>):<br>    <span class="ast-node student-node " id="stu_aaafba49-c015-4661-a123-f669ca10f805" data-node-id="aaafba49-c015-4661-a123-f669ca10f805" data-node-name="If" data-key=0 data-parent-list-id="2da41f55-4aa2-4fac-8bd8-aca636bfe534">if <span class="ast-node student-node " id="stu_c562adf5-aae6-4c85-8e6e-cc1a176e48b7" data-node-id="c562adf5-aae6-4c85-8e6e-cc1a176e48b7" data-node-name="Compare operators: ['Eq']" data-key=test><span class="ast-node student-node " id="stu_2cab2b26-330f-466d-a35e-8935d6d36746" data-node-id="2cab2b26-330f-466d-a35e-8935d6d36746" data-node-name="BinOp %" data-key=left><span class="ast-node student-node " id="stu_fa100954-7d5b-4d5b-8f75-439dde996cde" data-node-id="fa100954-7d5b-4d5b-8f75-439dde996cde" data-node-name="BinOp //" data-key=left><span class="ast-node student-node " id="stu_c1d9d092-102f-40ab-81e0-3b4029cbc135" data-node-id="c1d9d092-102f-40ab-81e0-3b4029cbc135" data-node-name="Load identifier eggs" data-key=left>eggs</span> // <span class="ast-node student-node " id="stu_00467918-c153-4e74-86a7-7933ed083ee1" data-node-id="00467918-c153-4e74-86a7-7933ed083ee1" data-node-name="Constant(value = 12)" data-key=right>12</span></span> % <span class="ast-node student-node " id="stu_a6dedc96-664e-46a1-9053-50cbea028921" data-node-id="a6dedc96-664e-46a1-9053-50cbea028921" data-node-name="Constant(value = 12)" data-key=right>12</span></span> == <span class="ast-node student-node " id="stu_7f8decc1-e2e8-47ef-98bf-a4a14711a168" data-node-id="7f8decc1-e2e8-47ef-98bf-a4a14711a168" data-node-name="Constant(value = 0)" data-key=0 data-parent-list-id="c9820f56-10a7-4655-b677-fccfd0f1ab82">0</span></span>:<br>        <span class="ast-node student-node " id="stu_4b6ef540-6e2c-419c-acbc-32263591be70" data-node-id="4b6ef540-6e2c-419c-acbc-32263591be70" data-node-name="Return" data-key=0 data-parent-list-id="301384a0-3b10-4529-831d-ad397f027bf8">return <span class="ast-node student-node " id="stu_3bf50c33-03b3-4c10-bd77-70e69612acf0" data-node-id="3bf50c33-03b3-4c10-bd77-70e69612acf0" data-node-name="BinOp //" data-key=value><span class="ast-node student-node " id="stu_d875bfcb-b39d-4305-ae44-2cae52a3c36a" data-node-id="d875bfcb-b39d-4305-ae44-2cae52a3c36a" data-node-name="Load identifier eggs" data-key=left>eggs</span> // <span class="ast-node student-node " id="stu_0ca8b2f0-9934-4636-8880-c1bc8024acd5" data-node-id="0ca8b2f0-9934-4636-8880-c1bc8024acd5" data-node-name="Constant(value = 12)" data-key=right>12</span></span></span></span><br>    <span class="ast-node student-node " id="stu_730401dd-2a0e-47a1-b454-fe18b85969f7" data-node-id="730401dd-2a0e-47a1-b454-fe18b85969f7" data-node-name="If" data-key=1 data-parent-list-id="2da41f55-4aa2-4fac-8bd8-aca636bfe534">if <span class="ast-node student-node " id="stu_f1c3acd3-7189-47b0-b3be-fa74b0a22dc3" data-node-id="f1c3acd3-7189-47b0-b3be-fa74b0a22dc3" data-node-name="Compare operators: ['NotEq']" data-key=test><span class="ast-node student-node " id="stu_605aaad0-2859-47e8-8a50-80ea5981bfc9" data-node-id="605aaad0-2859-47e8-8a50-80ea5981bfc9" data-node-name="BinOp %" data-key=left><span class="ast-node student-node " id="stu_eefaf212-9765-49e5-91ee-9ee8eab804dc" data-node-id="eefaf212-9765-49e5-91ee-9ee8eab804dc" data-node-name="BinOp //" data-key=left><span class="ast-node student-node " id="stu_fc29ee3e-cd46-4d0f-bb8d-d8e521cf28e6" data-node-id="fc29ee3e-cd46-4d0f-bb8d-d8e521cf28e6" data-node-name="Load identifier eggs" data-key=left>eggs</span> // <span class="ast-node student-node " id="stu_9fda2742-397a-48fd-9bcc-bbeac32e4a95" data-node-id="9fda2742-397a-48fd-9bcc-bbeac32e4a95" data-node-name="Constant(value = 12)" data-key=right>12</span></span> % <span class="ast-node student-node " id="stu_7c02061e-400b-46c4-8978-d4568680e86f" data-node-id="7c02061e-400b-46c4-8978-d4568680e86f" data-node-name="Constant(value = 12)" data-key=right>12</span></span> != <span class="ast-node student-node " id="stu_4fb6a693-8569-451f-ba48-57f39f8fb9f3" data-node-id="4fb6a693-8569-451f-ba48-57f39f8fb9f3" data-node-name="Constant(value = 0)" data-key=0 data-parent-list-id="e594ef48-846d-490f-a64d-5fc95e4078d7">0</span></span>:<br>        <span class="ast-node student-node " id="stu_74c9d4d7-26a6-4f12-8b85-e9566b493fac" data-node-id="74c9d4d7-26a6-4f12-8b85-e9566b493fac" data-node-name="Return" data-key=0 data-parent-list-id="2cdb8d1a-0225-46ee-84bd-627dada46c10">return <span class="ast-node student-node  rename-node" id="stu_e3bdefa9-4e8d-4b65-9459-b3da6e34f509" data-node-id="e3bdefa9-4e8d-4b65-9459-b3da6e34f509" data-node-name="BinOp -" data-key=value><span class="ast-node student-node " id="stu_46ac699d-d033-4e3f-b6c4-7361bd66b1d4" data-node-id="46ac699d-d033-4e3f-b6c4-7361bd66b1d4" data-node-name="BinOp //" data-key=left><span class="ast-node student-node " id="stu_3a0381be-804e-46d7-a258-59b07728b3ff" data-node-id="3a0381be-804e-46d7-a258-59b07728b3ff" data-node-name="Load identifier eggs" data-key=left>eggs</span> // <span class="ast-node student-node " id="stu_534171e9-1137-46e2-ad21-27ea3ccbe18e" data-node-id="534171e9-1137-46e2-ad21-27ea3ccbe18e" data-node-name="Constant(value = 12)" data-key=right>12</span></span> - <span class="ast-node student-node " id="stu_509f4056-4235-48cb-b460-3a756473a5c0" data-node-id="509f4056-4235-48cb-b460-3a756473a5c0" data-node-name="Constant(value = 1)" data-key=right>1</span></span></span></span></span></span></pre>,"{'Action.MOVE_Stage.MOVE_f9413069-a506-4f9b-8860-cb80db9a6f9a', 'Action.INSERT_Stage.INSERT_cf3c4ee6-34f6-47a7-b113-cca5d49f02ef'}{'Action.DELETE_Stage.DELETE_869ec2ca-fdeb-4640-bc03-32404279eb11', 'Action.DELETE_Stage.DELETE_3d0682eb-6ad4-485c-9979-02126978c6d8', 'Action.MOVE_Stage.MOVE_19ad9487-7965-48c7-bfca-e411a80e8a44', 'Action.MOVE_Stage.MOVE_57013a2e-5505-482f-a064-c94cdeaced29'}{'Action.MOVE_Stage.MOVE_e6a4e092-27ef-4bc9-b72c-ac36ae1bc08b', 'Action.DELETE_Stage.DELETE_629a5e63-bf00-4732-89dc-19ab54d6304a', 'Action.DELETE_Stage.DELETE_a39d7ec2-c37a-4ecc-8a45-35a282e55bc5'}{'Action.MOVE_Stage.MOVE_6b9191e1-39f0-40bb-9a35-48253f818594', 'Action.DELETE_Stage.DELETE_a9252939-35d9-4986-9d08-f8d6de38deef', 'Action.INSERT_Stage.INSERT_7b91735b-4629-4291-96dd-b574ef9c0043', 'Action.DELETE_Stage.DELETE_04309425-d838-4578-b40c-f7cf5ec87566'}{'Action.UPDATE_Stage.UPDATE_f9413069-a506-4f9b-8860-cb80db9a6f9a'}{'Action.UPDATE_Stage.UPDATE_898cb722-4a64-40d3-a936-df881932216f'}{'Action.UPDATE_Stage.UPDATE_c8e2789d-92fc-4b6c-abce-726bfd53ab13'}{'Action.MOVE_Stage.MOVE_f1aeb68b-2768-4680-b7c7-822638f7f16c'}",{'Action.UPDATE_Stage.UPDATE_e3bdefa9-4e8d-4b65-9459-b3da6e34f509'},17,1
8,<pre><span class="ast-node correction-node " id="stu_f7147536-aaa8-443c-a67f-369acce54e02" data-node-id="f7147536-aaa8-443c-a67f-369acce54e02" data-node-name="Module"><span class="ast-node correction-node " id="stu_070c73ce-7c73-448c-bca4-38c2b9a16723" data-node-id="070c73ce-7c73-448c-bca4-38c2b9a16723" data-node-name="FunctionDef name: howManyEggCartons" data-key=0 data-parent-list-id="ae5e76b6-477e-4f9c-9099-fdf9eeb917fb">def howManyEggCartons(<span class="ast-node correction-node " id="stu_a2a34d26-bede-4915-9a96-eeb65a5ee6df" data-node-id="a2a34d26-bede-4915-9a96-eeb65a5ee6df" data-node-name="arguments" data-key=args><span class="ast-node correction-node " id="stu_168ca963-dbfe-4400-ac9b-52f4a26f7a80" data-node-id="168ca963-dbfe-4400-ac9b-52f4a26f7a80" data-node-name="arg(arg = eggs)" data-key=0 data-parent-list-id="2a773287-42f5-43cf-948b-3c9ffe66eb80">eggs</span></span>):<br>    <span class="ast-node correction-node " id="stu_2b7e3b87-5d51-4977-88b1-8734a74b25dc" data-node-id="2b7e3b87-5d51-4977-88b1-8734a74b25dc" data-node-name="If" data-key=0 data-parent-list-id="e3967cbd-8aaa-4452-8fa3-0d2544d72fd3">if <span class="ast-node correction-node " id="stu_d798b705-d4d6-46b0-87d7-0def40b95f6f" data-node-id="d798b705-d4d6-46b0-87d7-0def40b95f6f" data-node-name="Compare operators: ['Eq']" data-key=test><span class="ast-node correction-node " id="stu_f357940b-387c-48e1-b2cd-3e4d9a08020f" data-node-id="f357940b-387c-48e1-b2cd-3e4d9a08020f" data-node-name="BinOp %" data-key=left><span class="ast-node correction-node  delete-node" id="stu_581d32f8-da16-433e-bb0c-fe19945d9947" data-node-id="581d32f8-da16-433e-bb0c-fe19945d9947" data-node-name="BinOp //" data-key=left><span class="ast-node correction-node  move-node" id="stu_6c9b1778-44b6-4912-a829-862b632e0c8a" data-node-id="6c9b1778-44b6-4912-a829-862b632e0c8a" data-node-name="Load identifier eggs" data-key=left>eggs</span> // <span class="ast-node correction-node  move-node" id="stu_dd22bb84-43c0-45e5-a101-17e7e559a0c6" data-node-id="dd22bb84-43c0-45e5-a101-17e7e559a0c6" data-node-name="Constant(value = 12)" data-key=right>12</span></span> % <span class="ast-node correction-node  delete-node" id="stu_2907399d-5d7c-4a3f-a970-04689f3e2fae" data-node-id="2907399d-5d7c-4a3f-a970-04689f3e2fae" data-node-name="Constant(value = 12)" data-key=right>12</span></span> == <span class="ast-node correction-node " id="stu_b61cffbd-359e-455f-a20b-466210d25b90" data-node-id="b61cffbd-359e-455f-a20b-466210d25b90" data-node-name="Constant(value = 0)" data-key=0 data-parent-list-id="51f82fc9-0ce2-4d3c-a416-cc7a2087f056">0</span></span>:<br>        <span class="ast-node correction-node " id="stu_9c261bc1-ef77-4595-8e04-b45ddeeb9e97" data-node-id="9c261bc1-ef77-4595-8e04-b45ddeeb9e97" data-node-name="Return" data-key=0 data-parent-list-id="cf45bcca-4a60-4a9d-8308-13e023b21ac1">return <span class="ast-node correction-node " id="stu_4f16a9c5-8727-4ccf-b517-4db97d7d0334" data-node-id="4f16a9c5-8727-4ccf-b517-4db97d7d0334" data-node-name="BinOp //" data-key=value><span class="ast-node correction-node " id="stu_88257c7c-f3f8-4f8a-bfd6-6aa54d4d41ba" data-node-id="88257c7c-f3f8-4f8a-bfd6-6aa54d4d41ba" data-node-name="Load identifier eggs" data-key=left>eggs</span> // <span class="ast-node correction-node " id="stu_1c42a366-a15b-4136-8438-e3ab5c4f739a" data-node-id="1c42a366-a15b-4136-8438-e3ab5c4f739a" data-node-name="Constant(value = 12)" data-key=right>12</span></span></span></span><br>    <span class="ast-node correction-node  delete-node" id="stu_326e427a-7ee8-47f0-bb8d-8a1f0f153e49" data-node-id="326e427a-7ee8-47f0-bb8d-8a1f0f153e49" data-node-name="If" data-key=1 data-parent-list-id="e3967cbd-8aaa-4452-8fa3-0d2544d72fd3">if <span class="ast-node correction-node  delete-node" id="stu_eabac30a-7219-4434-8bec-502ea9b39d48" data-node-id="eabac30a-7219-4434-8bec-502ea9b39d48" data-node-name="Compare operators: ['NotEq']" data-key=test><span class="ast-node correction-node  delete-node" id="stu_52520683-8e6e-4e32-bc87-f2a3a8619b8f" data-node-id="52520683-8e6e-4e32-bc87-f2a3a8619b8f" data-node-name="BinOp %" data-key=left><span class="ast-node correction-node  delete-node" id="stu_d9ed6eeb-15b6-486a-a26c-6f9b693b2300" data-node-id="d9ed6eeb-15b6-486a-a26c-6f9b693b2300" data-node-name="BinOp //" data-key=left><span class="ast-node correction-node  delete-node" id="stu_40b59f15-671c-4077-b3c0-b756055fa20c" data-node-id="40b59f15-671c-4077-b3c0-b756055fa20c" data-node-name="Load identifier eggs" data-key=left>eggs</span> // <span class="ast-node correction-node  delete-node" id="stu_36ce21f0-bf19-49e3-988f-3d2b3226d80b" data-node-id="36ce21f0-bf19-49e3-988f-3d2b3226d80b" data-node-name="Constant(value = 12)" data-key=right>12</span></span> % <span class="ast-node correction-node  delete-node" id="stu_e60aceeb-6f0d-4347-8e07-f7adcd4836ff" data-node-id="e60aceeb-6f0d-4347-8e07-f7adcd4836ff" data-node-name="Constant(value = 12)" data-key=right>12</span></span> != <span class="ast-node correction-node  delete-node" id="stu_a0374b24-520f-4920-8f95-2b5f9840d1de" data-node-id="a0374b24-520f-4920-8f95-2b5f9840d1de" data-node-name="Constant(value = 0)" data-key=0 data-parent-list-id="e1651189-20c1-4dd7-8c78-01837985d990">0</span></span>:<br>        <span class="ast-node correction-node  move-node" id="stu_67e4645f-37b9-4751-8657-ae0ab6f0f2b6" data-node-id="67e4645f-37b9-4751-8657-ae0ab6f0f2b6" data-node-name="Return" data-key=0 data-parent-list-id="63828c12-924a-4cac-a6a1-2e56dad9508f">return <span class="ast-node correction-node " id="stu_44081874-e5ba-4848-8d7e-d85e1fce68fd" data-node-id="44081874-e5ba-4848-8d7e-d85e1fce68fd" data-node-name="BinOp +" data-key=value><span class="ast-node correction-node " id="stu_c4813f2e-992a-4f2a-a80e-323c01398b5d" data-node-id="c4813f2e-992a-4f2a-a80e-323c01398b5d" data-node-name="BinOp //" data-key=left><span class="ast-node correction-node " id="stu_897ecebd-fcd3-4296-9f0e-12b0efc2cebd" data-node-id="897ecebd-fcd3-4296-9f0e-12b0efc2cebd" data-node-name="Load identifier eggs" data-key=left>eggs</span> // <span class="ast-node correction-node " id="stu_08b86bcc-04d7-4621-bf08-11472a67b5d3" data-node-id="08b86bcc-04d7-4621-bf08-11472a67b5d3" data-node-name="Constant(value = 12)" data-key=right>12</span></span> + <span class="ast-node correction-node " id="stu_797c926a-e9be-428b-8ee3-254034ce6188" data-node-id="797c926a-e9be-428b-8ee3-254034ce6188" data-node-name="Constant(value = 1)" data-key=right>1</span></span></span></span></span></span></pre>,<pre><span class="ast-node student-node " id="stu_ba08df9a-2ff2-4798-895f-35a119a12a9a" data-node-id="ba08df9a-2ff2-4798-895f-35a119a12a9a" data-node-name="Module"><span class="ast-node student-node " id="stu_f11d6078-25d5-4cdb-be21-d23cd902a788" data-node-id="f11d6078-25d5-4cdb-be21-d23cd902a788" data-node-name="FunctionDef name: howManyEggCartons" data-key=0 data-parent-list-id="d51e90b4-4f0c-4203-8106-cdb2e0bd12d2">def howManyEggCartons(<span class="ast-node student-node " id="stu_41107dec-4a92-4de6-b107-2432da0f6cd2" data-node-id="41107dec-4a92-4de6-b107-2432da0f6cd2" data-node-name="arguments" data-key=args><span class="ast-node student-node " id="stu_c8c043b5-4eba-4eb1-a44d-24f30301d7c5" data-node-id="c8c043b5-4eba-4eb1-a44d-24f30301d7c5" data-node-name="arg(arg = eggs)" data-key=0 data-parent-list-id="099d5936-7b87-4526-9037-3688d2eb6666">eggs</span></span>):<br>    <span class="ast-node student-node  delete-node" id="stu_a0028d7d-197e-473e-82db-5e253fa7925d" data-node-id="a0028d7d-197e-473e-82db-5e253fa7925d" data-node-name="If" data-key=0 data-parent-list-id="c66bc443-d80a-487a-925b-3a0ff235d29d">if <span class="ast-node student-node  delete-node" id="stu_f4585301-7780-4590-b5ee-837c9e00243e" data-node-id="f4585301-7780-4590-b5ee-837c9e00243e" data-node-name="Compare operators: ['Eq']" data-key=test><span class="ast-node student-node  rename-node move-node" id="stu_23f75fda-d2b8-496e-b0ee-2dcd8eb2dcb2" data-node-id="23f75fda-d2b8-496e-b0ee-2dcd8eb2dcb2" data-node-name="BinOp %" data-key=left><span class="ast-node student-node  rename-node move-node" id="stu_1b5e2283-5073-4152-a146-fac673b1c131" data-node-id="1b5e2283-5073-4152-a146-fac673b1c131" data-node-name="BinOp //" data-key=left><span class="ast-node student-node " id="stu_ae5768ea-6175-4db5-82bd-d01479bdbd10" data-node-id="ae5768ea-6175-4db5-82bd-d01479bdbd10" data-node-name="Load identifier eggs" data-key=left>eggs</span> // <span class="ast-node student-node " id="stu_444f81d1-7cce-4661-885f-6391ded48408" data-node-id="444f81d1-7cce-4661-885f-6391ded48408" data-node-name="Constant(value = 12)" data-key=right>12</span></span> % <span class="ast-node student-node  delete-node" id="stu_fbd3ce44-c67a-4e8e-9454-4bd518309f58" data-node-id="fbd3ce44-c67a-4e8e-9454-4bd518309f58" data-node-name="Constant(value = 12)" data-key=right>12</span></span> == <span class="ast-node student-node  move-node" id="stu_a49ebb61-f9af-4a1b-8188-60b4cfbdf2dc" data-node-id="a49ebb61-f9af-4a1b-8188-60b4cfbdf2dc" data-node-name="Constant(value = 0)" data-key=0 data-parent-list-id="485083d5-794d-41bd-826d-8506bfdfe34a">0</span></span>:<br>        <span class="ast-node student-node  move-node" id="stu_b96abeb7-a1d6-4ffb-96a7-80d04a452de8" data-node-id="b96abeb7-a1d6-4ffb-96a7-80d04a452de8" data-node-name="Return" data-key=0 data-parent-list-id="1333e07c-c624-4880-b5d2-4a03bafcdbc1">return <span class="ast-node student-node  delete-node" id="stu_34c15c11-ee4e-4376-bcec-f8a1ab2b93d6" data-node-id="34c15c11-ee4e-4376-bcec-f8a1ab2b93d6" data-node-name="BinOp //" data-key=value><span class="ast-node student-node  delete-node" id="stu_86564a22-a392-4c39-a001-e0c28f3e21e5" data-node-id="86564a22-a392-4c39-a001-e0c28f3e21e5" data-node-name="Load identifier eggs" data-key=left>eggs</span> // <span class="ast-node student-node  delete-node" id="stu_5ddedb3f-30f1-4cd5-a946-0c5ddf839b1f" data-node-id="5ddedb3f-30f1-4cd5-a946-0c5ddf839b1f" data-node-name="Constant(value = 12)" data-key=right>12</span></span></span></span><br>    <span class="ast-node student-node " id="stu_8eda03cb-0f7f-4730-a40b-424aecf4593f" data-node-id="8eda03cb-0f7f-4730-a40b-424aecf4593f" data-node-name="If" data-key=1 data-parent-list-id="c66bc443-d80a-487a-925b-3a0ff235d29d">if <span class="ast-node student-node  rename-node" id="stu_d46611ec-a1f2-4dcc-98d5-4577430050d8" data-node-id="d46611ec-a1f2-4dcc-98d5-4577430050d8" data-node-name="Compare operators: ['NotEq']" data-key=test><span class="ast-node student-node " id="stu_b3cdfb15-a373-4cb0-90da-2091e89041dc" data-node-id="b3cdfb15-a373-4cb0-90da-2091e89041dc" data-node-name="BinOp %" data-key=left><span class="ast-node student-node  delete-node" id="stu_f87d48e5-d2d2-4206-b941-a96c0f412822" data-node-id="f87d48e5-d2d2-4206-b941-a96c0f412822" data-node-name="BinOp //" data-key=left><span class="ast-node student-node  move-node" id="stu_686c8ab6-60ec-4c9c-947e-acad276c1931" data-node-id="686c8ab6-60ec-4c9c-947e-acad276c1931" data-node-name="Load identifier eggs" data-key=left>eggs</span> // <span class="ast-node student-node  move-node" id="stu_fe30e6a9-909d-4e72-af6e-46f4c9d19276" data-node-id="fe30e6a9-909d-4e72-af6e-46f4c9d19276" data-node-name="Constant(value = 12)" data-key=right>12</span></span> % <span class="ast-node student-node  delete-node" id="stu_c7dea862-75a5-4879-8b01-d983f6d6a3dd" data-node-id="c7dea862-75a5-4879-8b01-d983f6d6a3dd" data-node-name="Constant(value = 12)" data-key=right>12</span></span> != <span class="ast-node student-node " id="stu_bd374263-ab88-4409-bdc9-cf55dfc6d8f3" data-node-id="bd374263-ab88-4409-bdc9-cf55dfc6d8f3" data-node-name="Constant(value = 0)" data-key=0 data-parent-list-id="96f3a4a3-4843-44cb-9b7b-11bb94576fe4">0</span></span>:<br>        <span class="ast-node student-node  rename-node" id="stu_bebba40d-c93c-47d2-8c15-d1d38913af1b" data-node-id="bebba40d-c93c-47d2-8c15-d1d38913af1b" data-node-name="Return" data-key=0 data-parent-list-id="84df0e31-477d-4965-85ce-855fe25a0dde">return <span class="ast-node student-node " id="stu_e0572c0e-dada-484b-afa7-96acc8be760e" data-node-id="e0572c0e-dada-484b-afa7-96acc8be760e" data-node-name="BinOp +" data-key=value><span class="ast-node student-node " id="stu_ee0d1323-c57e-4fa6-83c0-6e173d44bdea" data-node-id="ee0d1323-c57e-4fa6-83c0-6e173d44bdea" data-node-name="BinOp //" data-key=left><span class="ast-node student-node " id="stu_e9456d53-a79e-4954-b9c7-ef4102b58104" data-node-id="e9456d53-a79e-4954-b9c7-ef4102b58104" data-node-name="Load identifier eggs" data-key=left>eggs</span> // <span class="ast-node student-node " id="stu_50b01d48-eae5-4542-b701-3c627ad14e43" data-node-id="50b01d48-eae5-4542-b701-3c627ad14e43" data-node-name="Constant(value = 12)" data-key=right>12</span></span> + <span class="ast-node student-node " id="stu_a9e4cb6a-94c6-40a9-8b88-d1d681833dd2" data-node-id="a9e4cb6a-94c6-40a9-8b88-d1d681833dd2" data-node-name="Constant(value = 1)" data-key=right>1</span></span></span></span></span></span></pre>,"{'Action.DELETE_Stage.DELETE_326e427a-7ee8-47f0-bb8d-8a1f0f153e49', 'Action.DELETE_Stage.DELETE_52520683-8e6e-4e32-bc87-f2a3a8619b8f', 'Action.DELETE_Stage.DELETE_d9ed6eeb-15b6-486a-a26c-6f9b693b2300', 'Action.DELETE_Stage.DELETE_36ce21f0-bf19-49e3-988f-3d2b3226d80b', 'Action.DELETE_Stage.DELETE_a0374b24-520f-4920-8f95-2b5f9840d1de', 'Action.DELETE_Stage.DELETE_63828c12-924a-4cac-a6a1-2e56dad9508f', 'Action.DELETE_Stage.DELETE_e60aceeb-6f0d-4347-8e07-f7adcd4836ff', 'Action.DELETE_Stage.DELETE_40b59f15-671c-4077-b3c0-b756055fa20c', 'Action.MOVE_Stage.MOVE_67e4645f-37b9-4751-8657-ae0ab6f0f2b6', 'Action.DELETE_Stage.DELETE_eabac30a-7219-4434-8bec-502ea9b39d48', 'Action.DELETE_Stage.DELETE_e1651189-20c1-4dd7-8c78-01837985d990'}{'Action.DELETE_Stage.DELETE_2907399d-5d7c-4a3f-a970-04689f3e2fae', 'Action.MOVE_Stage.MOVE_dd22bb84-43c0-45e5-a101-17e7e559a0c6', 'Action.MOVE_Stage.MOVE_6c9b1778-44b6-4912-a829-862b632e0c8a', 'Action.DELETE_Stage.DELETE_581d32f8-da16-433e-bb0c-fe19945d9947'}","{'Action.INSERT_Stage.INSERT_39561306-e358-4717-a742-15e4481ac6b3', 'Action.INSERT_Stage.INSERT_81cfe572-6262-476b-82c9-4c5119190e7a', 'Action.DELETE_Stage.DELETE_fbd3ce44-c67a-4e8e-9454-4bd518309f58', 'Action.UPDATE_Stage.UPDATE_23f75fda-d2b8-496e-b0ee-2dcd8eb2dcb2', 'Action.MOVE_Stage.ALIGN_KEYS_1b5e2283-5073-4152-a146-fac673b1c131'}{'Action.UPDATE_Stage.UPDATE_1333e07c-c624-4880-b5d2-4a03bafcdbc1', 'Action.INSERT_Stage.INSERT_71f4494a-fb6e-464a-9331-d60900be1072'}{'Action.UPDATE_Stage.UPDATE_bebba40d-c93c-47d2-8c15-d1d38913af1b', 'Action.INSERT_Stage.INSERT_cdd1fa12-4ad5-4040-a657-a76f681128e5', 'Action.INSERT_Stage.INSERT_d1701c55-0105-4c71-b629-3fbb4a17b327'}{'Action.MOVE_Stage.MOVE_23f75fda-d2b8-496e-b0ee-2dcd8eb2dcb2', 'Action.DELETE_Stage.DELETE_a0028d7d-197e-473e-82db-5e253fa7925d', 'Action.DELETE_Stage.DELETE_f4585301-7780-4590-b5ee-837c9e00243e', 'Action.MOVE_Stage.MOVE_1333e07c-c624-4880-b5d2-4a03bafcdbc1', 'Action.DELETE_Stage.DELETE_485083d5-794d-41bd-826d-8506bfdfe34a', 'Action.INSERT_Stage.INSERT_520bf800-caec-410e-94f8-46afc6496ffb', 'Action.MOVE_Stage.MOVE_a49ebb61-f9af-4a1b-8188-60b4cfbdf2dc', 'Action.INSERT_Stage.INSERT_ccd18ff3-ed99-435f-86a6-8abad9c77331'}{'Action.DELETE_Stage.DELETE_34c15c11-ee4e-4376-bcec-f8a1ab2b93d6', 'Action.INSERT_Stage.INSERT_c002234b-4212-4606-8bcf-3c293d066c16', 'Action.DELETE_Stage.DELETE_5ddedb3f-30f1-4cd5-a946-0c5ddf839b1f', 'Action.DELETE_Stage.DELETE_86564a22-a392-4c39-a001-e0c28f3e21e5'}{'Action.DELETE_Stage.DELETE_c7dea862-75a5-4879-8b01-d983f6d6a3dd', 'Action.MOVE_Stage.MOVE_fe30e6a9-909d-4e72-af6e-46f4c9d19276', 'Action.MOVE_Stage.MOVE_686c8ab6-60ec-4c9c-947e-acad276c1931', 'Action.DELETE_Stage.DELETE_f87d48e5-d2d2-4206-b941-a96c0f412822'}{'Action.UPDATE_Stage.UPDATE_1b5e2283-5073-4152-a146-fac673b1c131'}{'Action.UPDATE_Stage.UPDATE_84df0e31-477d-4965-85ce-855fe25a0dde'}{'Action.MOVE_Stage.ALIGN_KEYS_84df0e31-477d-4965-85ce-855fe25a0dde'}{'Action.UPDATE_Stage.UPDATE_d46611ec-a1f2-4dcc-98d5-4577430050d8'}{'Action.MOVE_Stage.MOVE_b96abeb7-a1d6-4ffb-96a7-80d04a452de8'}",15,31
9,<pre><span class="ast-node correction-node " id="stu_0d158bd2-b4fe-42dc-87e6-711e8b260980" data-node-id="0d158bd2-b4fe-42dc-87e6-711e8b260980" data-node-name="Module"><span class="ast-node correction-node " id="stu_af40b226-c28b-4bcf-b798-c6210ac8f93c" data-node-id="af40b226-c28b-4bcf-b798-c6210ac8f93c" data-node-name="FunctionDef name: howManyEggCartons" data-key=0 data-parent-list-id="149cf3c7-5117-41d5-963e-049cf76d5e1a">def howManyEggCartons(<span class="ast-node correction-node " id="stu_9d9c46d3-0c35-4a20-89d8-a1f851856eea" data-node-id="9d9c46d3-0c35-4a20-89d8-a1f851856eea" data-node-name="arguments" data-key=args><span class="ast-node correction-node " id="stu_11073f79-a82f-407c-b712-59f069930c85" data-node-id="11073f79-a82f-407c-b712-59f069930c85" data-node-name="arg(arg = eggs)" data-key=0 data-parent-list-id="f9458ba1-08be-4f4a-8941-c38935258302">eggs</span></span>):<br>    <span class="ast-node correction-node  delete-node" id="stu_390d913d-d9a9-4c0d-8196-a8af289a66c1" data-node-id="390d913d-d9a9-4c0d-8196-a8af289a66c1" data-node-name="Assign" data-key=0 data-parent-list-id="6dd243f9-3553-4f24-8efc-e9b6738e66b1"><span class="ast-node correction-node  delete-node" id="stu_4c33d094-d177-42d3-841b-c7129482c031" data-node-id="4c33d094-d177-42d3-841b-c7129482c031" data-node-name="Store identifier cartons" data-key=0 data-parent-list-id="3fe8353e-a69f-4209-b67e-ec949385cdb3">cartons</span> = <span class="ast-node correction-node  delete-node" id="stu_da5e9fcb-b40a-45eb-aa73-40a090f2f131" data-node-id="da5e9fcb-b40a-45eb-aa73-40a090f2f131" data-node-name="Constant(value = 0)" data-key=value>0</span></span><br>    <span class="ast-node correction-node " id="stu_dceec8e5-d0cc-49e2-b4be-ca802c76d5c0" data-node-id="dceec8e5-d0cc-49e2-b4be-ca802c76d5c0" data-node-name="If" data-key=1 data-parent-list-id="6dd243f9-3553-4f24-8efc-e9b6738e66b1">if <span class="ast-node correction-node " id="stu_738797d7-189d-4dd0-a32e-82d22989c55e" data-node-id="738797d7-189d-4dd0-a32e-82d22989c55e" data-node-name="Compare operators: ['Eq']" data-key=test><span class="ast-node correction-node " id="stu_33fb3796-c5de-4280-9552-317ff3c99d54" data-node-id="33fb3796-c5de-4280-9552-317ff3c99d54" data-node-name="BinOp %" data-key=left><span class="ast-node correction-node " id="stu_d78b8e53-39b1-4af7-ac2d-ff5602c6ec4e" data-node-id="d78b8e53-39b1-4af7-ac2d-ff5602c6ec4e" data-node-name="Load identifier eggs" data-key=left>eggs</span> % <span class="ast-node correction-node " id="stu_cd066194-7bc6-4068-9da9-b9b89052a004" data-node-id="cd066194-7bc6-4068-9da9-b9b89052a004" data-node-name="Constant(value = 12)" data-key=right>12</span></span> == <span class="ast-node correction-node " id="stu_07c3089c-d732-48b6-b59e-6075ecbe1cc9" data-node-id="07c3089c-d732-48b6-b59e-6075ecbe1cc9" data-node-name="Constant(value = 0)" data-key=0 data-parent-list-id="ba2afed7-0d0b-47c4-9816-0e2655d8682b">0</span></span>:<br>        <span class="ast-node correction-node  rename-node" id="stu_51cb4755-db63-42e9-b348-a8513a77d011" data-node-id="51cb4755-db63-42e9-b348-a8513a77d011" data-node-name="Assign" data-key=0 data-parent-list-id="472c449a-927b-4bed-8c20-10217bbd549a"><span class="ast-node correction-node  delete-node" id="stu_64339d93-35a7-4413-8d73-0254469e57a4" data-node-id="64339d93-35a7-4413-8d73-0254469e57a4" data-node-name="Store identifier cartons" data-key=0 data-parent-list-id="79e925e0-af84-4c16-af0f-7825c7d99ed8">cartons</span> = <span class="ast-node correction-node  rename-node" id="stu_d80eeb0e-6a15-4431-8372-e8b48b49aa58" data-node-id="d80eeb0e-6a15-4431-8372-e8b48b49aa58" data-node-name="BinOp /" data-key=value><span class="ast-node correction-node " id="stu_4acdfe94-7675-4990-b37e-b892e8bf6d16" data-node-id="4acdfe94-7675-4990-b37e-b892e8bf6d16" data-node-name="Load identifier eggs" data-key=left>eggs</span> / <span class="ast-node correction-node " id="stu_73389c28-10d5-42f0-a063-41dcdb1316d4" data-node-id="73389c28-10d5-42f0-a063-41dcdb1316d4" data-node-name="Constant(value = 12)" data-key=right>12</span></span></span><br>    else:<br>        <span class="ast-node correction-node  rename-node" id="stu_c441c089-7c4e-4ac1-9b6d-4034f3189d91" data-node-id="c441c089-7c4e-4ac1-9b6d-4034f3189d91" data-node-name="Assign" data-key=0 data-parent-list-id="c849864f-23b4-4dbd-b20e-b2840c89fe05"><span class="ast-node correction-node  delete-node" id="stu_9f09cb7c-aa01-4610-8cd3-d393ed1fbde1" data-node-id="9f09cb7c-aa01-4610-8cd3-d393ed1fbde1" data-node-name="Store identifier cartons" data-key=0 data-parent-list-id="26d843da-bcdf-445a-8278-5aa911c235ff">cartons</span> = <span class="ast-node correction-node " id="stu_f794c8e5-2e6d-4a92-a877-699a72da74da" data-node-id="f794c8e5-2e6d-4a92-a877-699a72da74da" data-node-name="BinOp +" data-key=value><span class="ast-node correction-node " id="stu_beed05cf-15eb-49ae-9b1e-d564ca42f007" data-node-id="beed05cf-15eb-49ae-9b1e-d564ca42f007" data-node-name="BinOp //" data-key=left><span class="ast-node correction-node " id="stu_472ccdeb-5ba3-4c3d-86fe-0cde00150689" data-node-id="472ccdeb-5ba3-4c3d-86fe-0cde00150689" data-node-name="Load identifier eggs" data-key=left>eggs</span> // <span class="ast-node correction-node " id="stu_bdd66ea9-74e3-4dab-a40d-82282adceb2e" data-node-id="bdd66ea9-74e3-4dab-a40d-82282adceb2e" data-node-name="Constant(value = 12)" data-key=right>12</span></span> + <span class="ast-node correction-node " id="stu_47f4ef65-d6bd-4bb4-83b6-5ad0cce7d011" data-node-id="47f4ef65-d6bd-4bb4-83b6-5ad0cce7d011" data-node-name="Constant(value = 1)" data-key=right>1</span></span></span></span><br>    <span class="ast-node correction-node  delete-node" id="stu_da740301-fe8e-486d-bbbe-414a641f7fb1" data-node-id="da740301-fe8e-486d-bbbe-414a641f7fb1" data-node-name="Return" data-key=2 data-parent-list-id="6dd243f9-3553-4f24-8efc-e9b6738e66b1">return <span class="ast-node correction-node  delete-node" id="stu_629b88f4-c8cc-4fea-9ae9-8d06a65c4466" data-node-id="629b88f4-c8cc-4fea-9ae9-8d06a65c4466" data-node-name="Load identifier cartons" data-key=value>cartons</span></span></span></span></pre>,<pre><span class="ast-node student-node " id="stu_16a3ec0c-62e2-4014-b71c-05328711dbe9" data-node-id="16a3ec0c-62e2-4014-b71c-05328711dbe9" data-node-name="Module"><span class="ast-node student-node " id="stu_60117180-bf83-4ca3-b0f7-7b85bc2b042e" data-node-id="60117180-bf83-4ca3-b0f7-7b85bc2b042e" data-node-name="FunctionDef name: howManyEggCartons" data-key=0 data-parent-list-id="a2c6cd2b-02bf-46b1-9b1c-e365685076b6">def howManyEggCartons(<span class="ast-node student-node " id="stu_e7e0f55b-8efc-4c29-aded-31f8b02b83b0" data-node-id="e7e0f55b-8efc-4c29-aded-31f8b02b83b0" data-node-name="arguments" data-key=args><span class="ast-node student-node " id="stu_b988804c-0af8-45ea-b5e2-f6661b5d6e2c" data-node-id="b988804c-0af8-45ea-b5e2-f6661b5d6e2c" data-node-name="arg(arg = eggs)" data-key=0 data-parent-list-id="5c5c4867-06f1-4408-a245-def684a11296">eggs</span></span>):<br>    <span class="ast-node student-node " id="stu_1a7e729d-16fb-4d88-ab19-2a413cbc2c61" data-node-id="1a7e729d-16fb-4d88-ab19-2a413cbc2c61" data-node-name="Assign" data-key=0 data-parent-list-id="46bea9ed-a194-45aa-95e9-da606dd75070"><span class="ast-node student-node " id="stu_3b537f01-df5e-4478-9880-f9c57e6da7d6" data-node-id="3b537f01-df5e-4478-9880-f9c57e6da7d6" data-node-name="Store identifier cartons" data-key=0 data-parent-list-id="4d419e84-f909-4285-9dd4-8566f9bc6988">cartons</span> = <span class="ast-node student-node " id="stu_974639a7-b8da-4a0a-a2dd-6ff7b8f1423d" data-node-id="974639a7-b8da-4a0a-a2dd-6ff7b8f1423d" data-node-name="Constant(value = 0)" data-key=value>0</span></span><br>    <span class="ast-node student-node " id="stu_0ca9b0a9-5437-4797-98b7-9b38fa9ec442" data-node-id="0ca9b0a9-5437-4797-98b7-9b38fa9ec442" data-node-name="If" data-key=1 data-parent-list-id="46bea9ed-a194-45aa-95e9-da606dd75070">if <span class="ast-node student-node " id="stu_64b6ac25-391a-4b36-887b-6f32e505faf4" data-node-id="64b6ac25-391a-4b36-887b-6f32e505faf4" data-node-name="Compare operators: ['Eq']" data-key=test><span class="ast-node student-node " id="stu_01d59579-26f3-4e50-bdfc-8f00b6390403" data-node-id="01d59579-26f3-4e50-bdfc-8f00b6390403" data-node-name="BinOp %" data-key=left><span class="ast-node student-node " id="stu_07c3f05f-a7bc-4234-ad9e-71ed805f1cff" data-node-id="07c3f05f-a7bc-4234-ad9e-71ed805f1cff" data-node-name="Load identifier eggs" data-key=left>eggs</span> % <span class="ast-node student-node " id="stu_75834491-8482-44f9-9515-724ebb67b61f" data-node-id="75834491-8482-44f9-9515-724ebb67b61f" data-node-name="Constant(value = 12)" data-key=right>12</span></span> == <span class="ast-node student-node " id="stu_693906ba-dd54-4274-bdcd-5431cdfca73e" data-node-id="693906ba-dd54-4274-bdcd-5431cdfca73e" data-node-name="Constant(value = 0)" data-key=0 data-parent-list-id="5fbc7003-b8de-4d5c-8a66-a41f32e01c5c">0</span></span>:<br>        <span class="ast-node student-node " id="stu_405bead1-fd67-427e-8a35-5ae76126032f" data-node-id="405bead1-fd67-427e-8a35-5ae76126032f" data-node-name="Assign" data-key=0 data-parent-list-id="96a3eb02-9b9a-4e1b-9ba1-962f81f54ce9"><span class="ast-node student-node " id="stu_bb85d683-9964-4e02-9a80-7695477f85c0" data-node-id="bb85d683-9964-4e02-9a80-7695477f85c0" data-node-name="Store identifier cartons" data-key=0 data-parent-list-id="331065ca-c453-4f66-a0b0-11ff6d91f486">cartons</span> = <span class="ast-node student-node " id="stu_56dca5f2-e71e-4961-acae-9e136535b631" data-node-id="56dca5f2-e71e-4961-acae-9e136535b631" data-node-name="BinOp /" data-key=value><span class="ast-node student-node " id="stu_cc9514c9-15ec-4e88-a779-2bf1f3802d39" data-node-id="cc9514c9-15ec-4e88-a779-2bf1f3802d39" data-node-name="Load identifier eggs" data-key=left>eggs</span> / <span class="ast-node student-node " id="stu_c67687d8-18cb-4808-857f-0c8614f849d6" data-node-id="c67687d8-18cb-4808-857f-0c8614f849d6" data-node-name="Constant(value = 12)" data-key=right>12</span></span></span><br>    else:<br>        <span class="ast-node student-node " id="stu_a02be4af-45e1-43eb-8cf5-d4cf7d795293" data-node-id="a02be4af-45e1-43eb-8cf5-d4cf7d795293" data-node-name="Assign" data-key=0 data-parent-list-id="e41cde32-4ab1-4792-a7c2-4772c41d32d0"><span class="ast-node student-node " id="stu_87081090-1e2b-49f7-8d34-31b09928a49b" data-node-id="87081090-1e2b-49f7-8d34-31b09928a49b" data-node-name="Store identifier cartons" data-key=0 data-parent-list-id="f8e7503b-af76-4e64-b169-06a8db7b47ab">cartons</span> = <span class="ast-node student-node " id="stu_79ec17d9-c957-4864-bc3b-6463528e8ae6" data-node-id="79ec17d9-c957-4864-bc3b-6463528e8ae6" data-node-name="BinOp +" data-key=value><span class="ast-node student-node " id="stu_b2135080-b335-41c6-80c1-251a5f78f652" data-node-id="b2135080-b335-41c6-80c1-251a5f78f652" data-node-name="BinOp //" data-key=left><span class="ast-node student-node " id="stu_4372707b-e16f-473e-8c8d-84214d57d895" data-node-id="4372707b-e16f-473e-8c8d-84214d57d895" data-node-name="Load identifier eggs" data-key=left>eggs</span> // <span class="ast-node student-node " id="stu_b10cb97c-b772-47df-843d-bb7ef0e54de9" data-node-id="b10cb97c-b772-47df-843d-bb7ef0e54de9" data-node-name="Constant(value = 12)" data-key=right>12</span></span> + <span class="ast-node student-node " id="stu_8d5de95b-7f00-4cdc-8010-2dbdff97d7e3" data-node-id="8d5de95b-7f00-4cdc-8010-2dbdff97d7e3" data-node-name="Constant(value = 1)" data-key=right>1</span></span></span></span><br>    <span class="ast-node student-node " id="stu_1909998e-9f97-48b1-807b-37d797f541da" data-node-id="1909998e-9f97-48b1-807b-37d797f541da" data-node-name="Return" data-key=2 data-parent-list-id="46bea9ed-a194-45aa-95e9-da606dd75070">return <span class="ast-node student-node " id="stu_4eb4a846-1b28-46ae-afd4-e1e746dbb178" data-node-id="4eb4a846-1b28-46ae-afd4-e1e746dbb178" data-node-name="Load identifier cartons" data-key=value>cartons</span></span></span></span></pre>,"{'Action.DELETE_Stage.DELETE_629b88f4-c8cc-4fea-9ae9-8d06a65c4466', 'Action.DELETE_Stage.DELETE_da740301-fe8e-486d-bbbe-414a641f7fb1'}{'Action.DELETE_Stage.DELETE_9f09cb7c-aa01-4610-8cd3-d393ed1fbde1', 'Action.UPDATE_Stage.UPDATE_c441c089-7c4e-4ac1-9b6d-4034f3189d91', 'Action.DELETE_Stage.DELETE_26d843da-bcdf-445a-8278-5aa911c235ff'}{'Action.DELETE_Stage.DELETE_64339d93-35a7-4413-8d73-0254469e57a4', 'Action.DELETE_Stage.DELETE_79e925e0-af84-4c16-af0f-7825c7d99ed8', 'Action.UPDATE_Stage.UPDATE_51cb4755-db63-42e9-b348-a8513a77d011'}{'Action.DELETE_Stage.DELETE_390d913d-d9a9-4c0d-8196-a8af289a66c1', 'Action.DELETE_Stage.DELETE_da5e9fcb-b40a-45eb-aa73-40a090f2f131', 'Action.DELETE_Stage.DELETE_3fe8353e-a69f-4209-b67e-ec949385cdb3', 'Action.DELETE_Stage.DELETE_4c33d094-d177-42d3-841b-c7129482c031'}{'Action.UPDATE_Stage.UPDATE_d80eeb0e-6a15-4431-8372-e8b48b49aa58'}",,13,0
